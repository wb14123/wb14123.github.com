<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title type="text" xml:lang="en"></title>
	<link type="application/atom+xml" href="http://www.sudorm-rf.com/feed/" rel="self"/>
 	<link type="text" href="http://www.sudorm-rf.com" rel="alternate"/>
	<updated>2012-12-17T13:36:04+08:00</updated>
	<id>http://www.sudorm-rf.com</id>
	<author>
		<name>Bin Wang</name>
	</author>
	<rights>Copyright (c) 2012, Bin Wang; all rights reserved.</rights>

	
	<entry>
		<title>Beautiful Math with MathJex</title>
		<link href="http://www.sudorm-rf.com/2012-12-17-Beautiful-Math-with-MathJex.html"/>
		<updated>2012-12-17T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/Beautiful-Math-with-MathJex</id>
		<content type="html">&lt;p&gt;Never ever say you are a geek if you don&amp;#8217;t have some mathematical formulas on your website! I have done so though &lt;a href='http://www.mathjax.org'&gt;MathJex&lt;/a&gt;&lt;code&gt;:)&lt;/code&gt;. Here are some examples:&lt;/p&gt;

&lt;p&gt;Code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$$ x = {-b \pm \sqrt{b^2-4ac} \over 2a} $$
$$ |s_n - s_m|=|\sum_{k=m+1}^n u_{k}|=|u_{m+1}+u_{m+2}+...+u_{n}| \lt \epsilon $$&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;/p&gt;
&lt;span&gt;$$ x = {-b \pm \sqrt{b^2-4ac} \over 2a} $$&lt;/span&gt;&lt;span&gt;$$ |s_n - s_m|=|\sum_{k=m+1}^n u_{k}|=|u_{m+1}+u_{m+2}+...+u_{n}| \lt \epsilon $$&lt;/span&gt;
&lt;p&gt;Now lets try some inline formulas, such as you may except &lt;span&gt;\(b \ne 0\)&lt;/span&gt; in expression &lt;span&gt;\(a \over b\)&lt;/span&gt; and the famous formula &lt;span&gt;\(E = mc^2\)&lt;/span&gt; from Einstein.&lt;/p&gt;

&lt;p&gt;However, there are some issues to use MathJex with Markdown because symbols in formula will be parsed by Markdown first. The easiest way to avoid this is surrounding your formula with &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; since Markdown will parse nothing in a html/xml block. Such as &lt;code&gt;&amp;lt;span&amp;gt;\(a \ne 0\)&amp;lt;/span&amp;gt;&lt;/code&gt; for a inline formula &lt;span&gt;\(a \ne 0\)&lt;/span&gt;.&lt;/p&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
	<entry>
		<title>Create A Virtual Machine Network</title>
		<link href="http://www.sudorm-rf.com/2012-12-16-Create-A-Virtual-Machine-Network.html"/>
		<updated>2012-12-16T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/Create-A-Virtual-Machine-Network</id>
		<content type="html">&lt;p&gt;Because of some problems I&amp;#8217;m working on, I need some test machines with Windows and some Linux distribution installed. It is impossible to have so many machines or install so many systems on my laptop. So I use &lt;a href='http://www.qemu.org'&gt;qemu&lt;/a&gt; to create some virtual machines and use &lt;a href='http://virt-manager.org/'&gt;virt-manager&lt;/a&gt; to manage them. Here is what I have now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My host: Archlinux, 64 bits, Core i3, 2G RAM, 2G swap.&lt;/li&gt;

&lt;li&gt;Guest 1: Ubuntu 8.10 desktop, 64 bits, 1 core, 512M RAM.&lt;/li&gt;

&lt;li&gt;Guest 2: Ubuntu 12.10 server, 64 bits, 1 core, 512M RAM.&lt;/li&gt;

&lt;li&gt;Guest 3: Windows XP, x86, 1 core, 512M RAM.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are two points I&amp;#8217;d like to say:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Qemu with &lt;a href='http://www.linux-kvm.org/'&gt;kvm&lt;/a&gt; is quite effective. I could start three guests (or more) at the same time and it works very well.&lt;/li&gt;

&lt;li&gt;Virt-manager is very easy to use. Before it , I waste almost a whole day to use qemu&amp;#8217;s command line to put the three guests into a same VLAN.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;#8217;m quite happy with these now. I could&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try whatever Linux distribution I&amp;#8217;d like.&lt;/li&gt;

&lt;li&gt;Do experiments in multi-host environment.&lt;/li&gt;

&lt;li&gt;Test whatever on any OS and need nothing to worry about.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After all, I want to say something about virtaulization. I think the only useful situation of virtaulization is testing, learning or trying to do something for fun. I&amp;#8217;m not saying it is not important. When a technology could let us do some funny things, it will be really awesome and important.&lt;/p&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
	<entry>
		<title>Remove Categories</title>
		<link href="http://www.sudorm-rf.com/2012-12-10-Remove-Categories.html"/>
		<updated>2012-12-10T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/Remove-Categories</id>
		<content type="html">&lt;p&gt;I removed categories from my blog today. I did this for some reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I need pagination. But there is no neat way to paginate in categories index.&lt;/li&gt;

&lt;li&gt;I can focus on writing but not thinking which category I should put my new post.&lt;/li&gt;

&lt;li&gt;Tag is enough. Though index by tags is not available now, I will figure out a way.&lt;/li&gt;

&lt;li&gt;It keeps this site more simple!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cause I did not index my posts by categories, the urls have changed a little. Maybe it will affect Google&amp;#8217;s index and my blog&amp;#8217;s search. But since my blog is relatively new, I will accept it. (It is not a big deal since I&amp;#8217;m thinking about change my site&amp;#8217;s domain).&lt;/p&gt;

&lt;p&gt;Here is some thoughts about tags. I have seen lots of tag plugins for jekyll, but most of them could only index by one tag. I prefer to see how many posts are under several tags. I may use Javascript to do it some day.&lt;/p&gt;

&lt;p&gt;By the way, I&amp;#8217;m not good at html and css. Other open sourced jekyll site helped me a lot. Especially the &lt;a href='https://github.com/shenfeng/shenfeng.me'&gt;source code of my old colleague&amp;#8217;s blog&lt;/a&gt;. When I have some questions, just look at the source code and it will be clear.&lt;/p&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
	<entry>
		<title>Backup My Dotfiles</title>
		<link href="http://www.sudorm-rf.com/2012-12-05-Backup-My-Dotfiles.html"/>
		<updated>2012-12-05T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/Backup-My-Dotfiles</id>
		<content type="html">&lt;p&gt;These days I re-configure my vim and zsh. Then backup them in &lt;a href='http://github.com'&gt;github&lt;/a&gt;. You can see it at &lt;a href='https://github.com/wb14123/dotfiles'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using github to backup dotfiles is really a comfortable way. In this way, you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Feel free to change your configures, since if you don&amp;#8217;t like the configure some day, you can roll it back.&lt;/li&gt;

&lt;li&gt;Update your configures anywhere. Just use git to clone your configure files from github.&lt;/li&gt;

&lt;li&gt;Keep different versions for different machines (Such as for desktop and laptop). Just use branch to control them.&lt;/li&gt;

&lt;li&gt;If you are using vim plugins from git repo or something like &lt;a href='https://github.com/robbyrussell/oh-my-zsh'&gt;oh-my-zsh&lt;/a&gt;, you could simple use git submodule to keep track of them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The basic idea is put configure files in a directory such as &lt;code&gt;dotfile&lt;/code&gt; and use git to track it. Then make a symbolic link to home. However, manual make symbolic links is boring. Firstly I am thinking of use the same directory structure as &lt;code&gt;~/&lt;/code&gt; and then automatic link them. But there comes some problems: for some directories such as &lt;code&gt;.vim&lt;/code&gt;, we should make a link for them while for some directories such as &lt;code&gt;.config&lt;/code&gt;, we may only want to link &lt;code&gt;openbox&lt;/code&gt; under it to &lt;code&gt;~/.config/openbox&lt;/code&gt;. It seems impossible to use an automatic way totally. But some shell code could make life a little easy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;check_link() {
	LINK=`pwd`/$1
	TARGET=~/$2
	if [ -h $TARGET ] ; then
		echo -n &amp;quot;remove symbolic link: &amp;quot;
		rm -v $TARGET
	elif [ -e $TARGET ] ; then
		echo -n &amp;quot;move: &amp;quot;
		mv -v $TARGET $TARGET.old
	fi
	echo -n &amp;quot;link: &amp;quot;
	ln -sv $LINK $TARGET
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usage: &lt;code&gt;check_link &amp;lt;path_in_dotfiles&amp;gt; &amp;lt;path_in_home&amp;gt;&lt;/code&gt;, such as &lt;code&gt;check_link vim/vimrc .vimrc&lt;/code&gt;. See &lt;a href='https://github.com/wb14123/dotfiles/blob/master/link.sh'&gt;my github repo&lt;/a&gt; for details.&lt;/p&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
	<entry>
		<title>Compile And Install Kernel</title>
		<link href="http://www.sudorm-rf.com/2012-11-27-Compile-And-Install-Kernel.html"/>
		<updated>2012-11-27T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/Compile-And-Install-Kernel</id>
		<content type="html">&lt;p&gt;There are already many documents to teach one how to compile and install kernel. Here are just some key notes. Use &lt;code&gt;make help&lt;/code&gt; under source directory for details.&lt;/p&gt;

&lt;h2 id='0_kernel_configure'&gt;0. Kernel configure&lt;/h2&gt;

&lt;p&gt;It is happy to have a kernel git repo. Using &lt;code&gt;git tag&lt;/code&gt; to see the kernel versions and use &lt;code&gt;git checkout &amp;lt;tag&amp;gt;&lt;/code&gt; to checkout the specified version, such as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout v3.7-rc6&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is recommended to use the distribution&amp;#8217;s kernel configure file as a basic configure when you compile the kernel for the first time. Copy it from &lt;code&gt;/boot&lt;/code&gt; to &lt;code&gt;&amp;lt;build_dir&amp;gt;/.config&lt;/code&gt;. Use this command to modify it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make O=&amp;lt;build_dir&amp;gt; menuconfig&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will save the new configure and rename the old configure with &lt;code&gt;.config.old&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id='1_kernel_image'&gt;1. Kernel image&lt;/h2&gt;

&lt;p&gt;Kernel image is the most important part. Use this command to compile kernel in &lt;code&gt;&amp;lt;build_dir&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make O=&amp;lt;build_dir&amp;gt; -j4&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, Copy &lt;code&gt;vmlinux&lt;/code&gt; and &lt;code&gt;System.map&lt;/code&gt; to &lt;code&gt;/boot&lt;/code&gt;. And then configure the boot loader. Or use the command &lt;code&gt;installkernel&lt;/code&gt; if you have it.&lt;/p&gt;

&lt;h2 id='2_kernel_modules'&gt;2. Kernel modules&lt;/h2&gt;

&lt;p&gt;Some code are compiled to kernel modules. It need to be installed to the system. Use this command to install kernel modules and firmwares:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make O=&amp;lt;build_dir&amp;gt; modules_install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It installs kernel modules under &lt;code&gt;/usr/lib/modules/&amp;lt;kernel_version&amp;gt;&lt;/code&gt;. You can also specify the output directory using &lt;code&gt;INSTALL_MOD_PATH&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make O=&amp;lt;build_dir&amp;gt; INSTALL_MOD_PATH=&amp;lt;module_dir&amp;gt; modules_install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;INSTALL_MOD_PATH&lt;/code&gt; is &lt;code&gt;/&lt;/code&gt; by default.&lt;/p&gt;

&lt;h2 id='3_linux_headers'&gt;3. Linux headers&lt;/h2&gt;

&lt;p&gt;Linux headers are some header files to invoked by user space programs. Using this command to output it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make O=&amp;lt;build_dir&amp;gt; INSTALL_HDR_PATH=&amp;lt;headers_dir&amp;gt; headers_install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It installs headers to &lt;code&gt;&amp;lt;headers_dir&amp;gt;&lt;/code&gt;. You should copy them into &lt;code&gt;/usr/include&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id='another_way'&gt;Another way&lt;/h2&gt;

&lt;p&gt;After all, you may want to make a kernel package to install on other machines. Such as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make O=&amp;lt;build_dir&amp;gt; -j4 binrpm-pkg&lt;/code&gt;&lt;/pre&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
	<entry>
		<title>Comment And Search Are Available</title>
		<link href="http://www.sudorm-rf.com/2012-11-20-Comment-And-Search-Are-Available.html"/>
		<updated>2012-11-20T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/Comment-And-Search-Are-Available</id>
		<content type="html">&lt;p&gt;As you can see, my blog are able to comment and search now!&lt;/p&gt;

&lt;h2 id='comment'&gt;Comment&lt;/h2&gt;

&lt;p&gt;I always think comment is very important for a blog. You can know how helpful or is there some issues in your article. &lt;a href='http://disqus.com'&gt;Disqus&lt;/a&gt; is a great tool to put comment on a website. It is neat and powerful as you can see. It may be a little slow in China. But consider of my blog are mostly written in English, it is not a big deal.&lt;/p&gt;

&lt;h2 id='search'&gt;Search&lt;/h2&gt;

&lt;p&gt;The search engine I am using is &lt;a href='http://www.google.com/cse'&gt;Google custom search engine&lt;/a&gt;. Isn&amp;#8217;t it awesome I have google&amp;#8217;s technology on my blog? It is easy to use, too. The badness of this choice is google may take some time to put the website&amp;#8217;s content into its index. And google is even not available in China sometimes.&lt;/p&gt;

&lt;h2 id='scripts_to_make_life_easy'&gt;Scripts to Make Life Easy&lt;/h2&gt;

&lt;p&gt;As I put the website on &lt;a href='http://pages.github.com/'&gt;github page&lt;/a&gt;, I don&amp;#8217;t want to upload the jekyll directory. Just the static site is enough. So I must copy the site to git repository, add, commit and then push it. It is a boring work. I write two scripts to make it easy. I don&amp;#8217;t know if there is some other way to do this, but I&amp;#8217;m OK with it.&lt;/p&gt;

&lt;p&gt;update.sh: generate static site and upload to github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

BASE_DIR=`pwd`
J_DIR=&amp;quot;./jekyll&amp;quot;
GIT_DIR=&amp;quot;./wb14123.github.com&amp;quot;

cd $J_DIR
jekyll
cd $BASE_DIR
rm -r $GIT_DIR/*
cp -r $J_DIR/_site/* $GIT_DIR/
cd $GIT_DIR
git add -A .
git commit -m &amp;quot;Changed at $(date)&amp;quot;
git push origin master
exit $?&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;newpost.sh: use vim to open a new post with current time and some meta information.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

if [ $# -lt 1 ]
then
    echo &amp;quot;newpost: You need to specify the post name.&amp;quot;
    exit 1
fi

POST_NAME=$1
POST_DATE=`date +%Y-%m-%d`
POST_DIR=&amp;quot;./jekyll/_posts&amp;quot;
FILE_NAME=`echo &amp;quot;$POST_DIR/$POST_DATE-$POST_NAME.md&amp;quot; | sed &amp;quot;s/ /-/g&amp;quot;`

echo &amp;quot;
---
layout: post
title: $POST_NAME
categories: misc
tags: []
---
&amp;quot; &amp;gt; $FILE_NAME

vim $FILE_NAME&lt;/code&gt;&lt;/pre&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
	<entry>
		<title>My New Blog Website</title>
		<link href="http://www.sudorm-rf.com/2012-11-19-my-new-blog.html"/>
		<updated>2012-11-19T00:00:00+08:00</updated>
		<id>http://paulstamatiou.com/my-new-blog</id>
		<content type="html">&lt;p&gt;This is my new blog website, just as simple and as good as my imagine. It is powered by jekyll - a ruby tool to generate a static website. I am using wordpress writing a Chinese blog, too. But its editor is not good enough to write with. On the other hand, jekyll makes it possible to write with markdown, which is really a good tool for writing. Also, a static website is efficient and awesome.&lt;/p&gt;

&lt;p&gt;But this site is too simple now. There are some features I missed, such as search box, comment, archives by date, index by tags and so on. Some of them could be solved by third party, and some of them could be solved by plugins. But it makes the blog not so simple any more.&lt;/p&gt;

&lt;p&gt;With so many cool techs nowadays, it is easy to write a website. But it is not so easy to generate a static website with many features. Here is something about balance. They said &amp;#8220;keep it stupid and simple&amp;#8221;, and &amp;#8220;less is more&amp;#8221;. It is really an art to find out how less is just good for a production. Even the user himself doesn&amp;#8217;t exactly know how much he wanted.&lt;/p&gt;

&lt;p&gt;Anyway, here is my new blog. Have fun and enjoy it!&lt;/p&gt;Liquid error: No such file or directory - /home/wangbin/blog/jekyll/_includes</content>
	</entry>
	
</feed>
