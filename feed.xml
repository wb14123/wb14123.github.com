<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://www.binwang.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.binwang.me/" rel="alternate" type="text/html" /><updated>2020-10-19T08:59:20-04:00</updated><id>https://www.binwang.me/feed.xml</id><title type="html">Bin Wang - My Personal Blog</title><subtitle>This is my personal blog about computer science, technology and my life.</subtitle><entry><title type="html">How to Estimate Max TPS from TPM</title><link href="https://www.binwang.me/2020-10-18-How-to-Estimate-Max-TPS-from-TPM.html" rel="alternate" type="text/html" title="How to Estimate Max TPS from TPM" /><published>2020-10-18T00:00:00-04:00</published><updated>2020-10-18T00:00:00-04:00</updated><id>https://www.binwang.me/How-to-Estimate-Max-TPS-from-TPM</id><content type="html" xml:base="https://www.binwang.me/2020-10-18-How-to-Estimate-Max-TPS-from-TPM.html">&lt;p&gt;It’s good to understand the TPS (transaction per second) of a service. But sometimes we only have TPM (transaction per minute) metrics. It may because we don’t have TPS metric at all since it needs resources to compute, or it has been deleted because storing all the historical per second metrics needs a lot of storage space. So we need to estimate TPS from TPM (or even longer time period, which the method below also applies). It’s not hard to get an average TPS from TPM: just divide TPM by 60. However, because the database and the dependency services have a limit on how many concurrent requests it can handle, we also need to understand what’s the max TPS. In this article, we will explore how to do that.&lt;/p&gt;

&lt;p&gt;We have an assumption before we go to the solution: we assume that in the time period of one minute, the requests to the service has the same probability to happen at any time. In another word, the requests are independently of the time since last request. This means the time of the requests is a uniform distribution. This is a reasonable assumption: though most services has peak requests during a day, it tends to be distributed evenly in a short period like one minute,. We need to notice that the equal of probability doesn’t mean all the requests &lt;strong&gt;will&lt;/strong&gt; arrive evenly in the minute, otherwise max TPS will be the same as average TPS.&lt;/p&gt;

&lt;p&gt;With this assumption in mind, we can use &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;Poisson distribution&lt;/a&gt; to solve this problem. The probability of how many times the event occurs in the interval of time can be solved by this:&lt;/p&gt;

&lt;p&gt;&lt;span&gt;\(P(TPS=k) =  \frac{\lambda^k e^{-k}}{k!}\)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;\(k\)&lt;/span&gt; means how many times the event happens in the interval of time. &lt;span&gt;\(\lambda\)&lt;/span&gt; means the average of times that the event will occur in the interval.&lt;/p&gt;

&lt;p&gt;In our case, the interval of time is 1 second. So &lt;span&gt;\(\lambda\)&lt;span&gt; is the average TPS: &lt;span&gt;\(TPM / 60\)&lt;/span&gt;. And &lt;span&gt;\(P(k)\)&lt;/span&gt; means the probability of the TPS during this minute.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;So we have the probability of the TPS. But what we want is the max TPS. If we want to know what’s the probability of max TPS equals n, we can add all the probabilities of TPS under n:&lt;/p&gt;

&lt;p&gt;&lt;span&gt;\(P(max TPS = n) = \sum_{k=0}^{n} P(TPS=k) = \sum_{k=0}^{n} \frac{\lambda^k e^{-k}}{k!}\)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Then we can draw a graph of this function and select n that makes the probability almost to 1. I recommend &lt;a href=&quot;https://www.wolframalpha.com&quot;&gt;Wolfram Alpha&lt;/a&gt; to draw the graph. Though it needs paid version to show a more clear graph, the free version is enough for our use case.&lt;/p&gt;

&lt;p&gt;Let’s give an example. Suppose we find our max TPM during peak time is 1200, then the average TPS during that minute is 200, which means &lt;span&gt;\(\lambda = 200\)&lt;/span&gt;. Then we can draw a graph of &lt;span&gt;\(P(max TPS=n)\)&lt;/span&gt; with &lt;span&gt;\(\lambda = 200\)&lt;/span&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2020-10-18-How-to-Estimate-max-TPS-from-TPM/p-lambda-200.png&quot; alt=&quot;p-lambda-200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the graph, we can see a max TPS of 260 is a safety choice. And in this minute, about 50% of the chance that the TPS will above the average TPS 200.&lt;/p&gt;

&lt;p&gt;Sometimes the dependency has a throttling mechanism. It may has a target throttling configuration as TPS, but actually count the throttling number by sub-second metrics like transactions per 100ms. (Ideally this shouldn’t be the case but sometimes that happens and we don’t always have control over dependency services). In this case, we need to count max transactions per 100ms. Which &lt;span&gt;\(\lambda = 20\)&lt;/span&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2020-10-18-How-to-Estimate-max-TPS-from-TPM/p-lambda-20.png&quot; alt=&quot;p-lambda-20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the graph, we can see max transactions per 100ms would be more like 36. And when we provide a target throttling TPS, we should multiply this by 10 which is 360, a lot higher than 260.&lt;/p&gt;

&lt;p&gt;The calculation above also applies when it count throttling number independently on multiple hosts. (Again, it should have a better throttling counting mechanism). For example, if the dependency service has 10 hosts and it chooses random host to handle the request, then we should count max TPS per host. Which &lt;span&gt;\(\lambda\)&lt;/span&gt; is also 20 and target TPS configuration should be 360 instead of 260.&lt;/p&gt;</content><author><name></name></author><category term="probability theory" /><category term="math" /><category term="technology" /><summary type="html">It’s good to understand the TPS (transaction per second) of a service. But sometimes we only have TPM (transaction per minute) metrics. It may because we don’t have TPS metric at all since it needs resources to compute, or it has been deleted because storing all the historical per second metrics needs a lot of storage space. So we need to estimate TPS from TPM (or even longer time period, which the method below also applies). It’s not hard to get an average TPS from TPM: just divide TPM by 60. However, because the database and the dependency services have a limit on how many concurrent requests it can handle, we also need to understand what’s the max TPS. In this article, we will explore how to do that.</summary></entry><entry><title type="html">Understand Liveness and Fairness in TLA+</title><link href="https://www.binwang.me/2020-10-06-Understand-Liveness-and-Fairness-in-TLA.html" rel="alternate" type="text/html" title="Understand Liveness and Fairness in TLA+" /><published>2020-10-06T00:00:00-04:00</published><updated>2020-10-06T00:00:00-04:00</updated><id>https://www.binwang.me/Understand-Liveness-and-Fairness-in-TLA</id><content type="html" xml:base="https://www.binwang.me/2020-10-06-Understand-Liveness-and-Fairness-in-TLA.html">&lt;p&gt;Recently I’m learning &lt;a href=&quot;https://lamport.azurewebsites.net/tla/tla.html&quot;&gt;TLA+&lt;/a&gt;: A language that can specify distributed and concurrent systems. Though it’s very different from most programming languages, the idea behind it is very simple: basically what it does is specifying a state machine. The &lt;a href=&quot;https://lamport.azurewebsites.net/tla/toolbox.html&quot;&gt;TLA+ tool box&lt;/a&gt; has a model checker called TLC that can explore all the states of the state machine and check properties of the system. If the state space is too big or infinite, we can define a reasonable subset of it to check. So it will not always guarantee the correctness. However, the tool box also has a more advanced tool called TLA+ Proof System (TLAPS) to write formal proof like Coq. I highly recommend the &lt;a href=&quot;http://lamport.azurewebsites.net/video/videos.html&quot;&gt;video course&lt;/a&gt; to learn TLA+. It’s short and includes TLC. I first started with The TLA+ Book &lt;em&gt;Specifying Systems&lt;/em&gt; which doesn’t include TLC, and I was wondering how specify a system can check properties of it.&lt;/p&gt;

&lt;p&gt;Even though many programmers may not be very comfortable with the concept of TLA+ at first, it shouldn’t take a lot effort to write a specification. However, I did have some hard time to understand liveness and fairness in the last two videos. The video does a great job to define and explain it. But the example it uses is not very simple which adds a barrier to understand the concepts. In this article, I want to introduce a much simpler example, which makes it much easier to do experiment with it and see if your understanding is right.&lt;/p&gt;

&lt;p&gt;This example is a very simple state machine, which state can go from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; to &lt;code&gt;c&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;a -&amp;gt; b -&amp;gt; c
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The TLA+ code to specify it is also very simple:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;VARIABLE state
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;Init == state = &amp;quot;a&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;AToB == state = &amp;quot;a&amp;quot; /\ state' = &amp;quot;b&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;BToC == state = &amp;quot;b&amp;quot; /\ state' = &amp;quot;c&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;Next == AToB \/ BToC
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;Spec == Init /\ [][Next]_state
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The specification defines what’s the possible states and steps of the system. This is &lt;strong&gt;safety property&lt;/strong&gt; which defines what a system can do. If we want to use TLC to check anything about this system, we need to select “Temporal formula” under “What is the behavior spec” and put “Spec” in it. For example, if we want to check &lt;code&gt;state&lt;/code&gt; is always be one of &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt;. We can check this formula in TLC as an invariance:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;state \in {&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The property we want to check in the system may not always be this simple. For example, we may want to check &lt;code&gt;state&lt;/code&gt; can be &lt;code&gt;c&lt;/code&gt; at some point. The property that defines what a system must satisfy is called &lt;strong&gt;liveness&lt;/strong&gt;. I found this name confusing at first. I think the reason it’s called liveness is because it usually defines what property a system can eventually reach, which means the system is making progress thus “liveness”.&lt;/p&gt;

&lt;p&gt;So let’s define the liveness property that says the system can eventually reach the state &lt;code&gt;c&lt;/code&gt;. TLA+ uses &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; to define the meaning of eventually, so the property can be written like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&amp;lt;&amp;gt;(state = &amp;quot;c&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;We can add this to TLC model’s properties field and run it to check if the system satisfies the property.&lt;/p&gt;

&lt;p&gt;So far, if we run this against &lt;code&gt;Spec&lt;/code&gt;, TLC will report error. What happened? It turns out the specification not only specifies how the state can be changed in next state, but also specifies the state can be unchanged during steps. This makes it possible to interact with other systems. So the states of the system can stuck in one state forever and may never reaches &lt;code&gt;c&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;a -&amp;gt; b -&amp;gt; b -&amp;gt; b -&amp;gt; ....
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This doesn’t seem right. We don’t want the system stuck in one state forever. This is where fairness comes in. We can see in the situation above, the state is always in &lt;code&gt;b&lt;/code&gt;, which &lt;code&gt;BToC&lt;/code&gt; is enabled and we want it to be executed at some point:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;a -&amp;gt; b -&amp;gt; b -&amp;gt; b -&amp;gt; ... -&amp;gt; c
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;More specifically, we want the behavior to be executed at some point if it’s enabled continuously. This is called &lt;strong&gt;weak fairness&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So let’s add weak fairness to all the next steps of our specification. Then &lt;code&gt;Spec&lt;/code&gt; changed in to this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;Spec == Init /\ [][Next]_state /\ WF_state(Next)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;If we run TLC again, we can see &lt;code&gt;&amp;lt;&amp;gt;(state = &quot;c&quot;)&lt;/code&gt; will pass the check.&lt;/p&gt;

&lt;p&gt;So far so good. But let’s make our state machine a little more complex by adding a step from &lt;code&gt;b&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;a &amp;lt;---&amp;gt; b --&amp;gt; c
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The corresponding TLA+ specification is like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;VARIABLE state
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;Init == state = &amp;quot;a&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;AToB == state = &amp;quot;a&amp;quot; /\ state' = &amp;quot;b&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;BToA == state = &amp;quot;b&amp;quot; /\ state' = &amp;quot;a&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;BToC == state = &amp;quot;b&amp;quot; /\ state' = &amp;quot;c&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;Next == AToB \/ BToA \/ BToC
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;Spec == Init /\ [][Next]_state /\ WF_state(Next)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Let’s check &lt;code&gt;&amp;lt;&amp;gt;(state = &quot;c&quot;)&lt;/code&gt; in TLC again, and we can find it failed. What’s happening now? It turns out even though the system will not stuck in one state forever, it can stuck in some of the states, in this case, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;a -&amp;gt; b -&amp;gt; a -&amp;gt; b -&amp;gt; a -&amp;gt; b -&amp;gt; ....
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Sometimes this is the expected behaviour, but sometimes we want other steps have a chance to happen. In this case, we want to &lt;code&gt;BToC&lt;/code&gt; have a chance to happen if &lt;code&gt;state&lt;/code&gt; reached &lt;code&gt;b&lt;/code&gt; repeatedly:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;a -&amp;gt; b -&amp;gt; a -&amp;gt; b -&amp;gt; a -&amp;gt; b -&amp;gt; .... -&amp;gt; c
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;We call this kind of property &lt;strong&gt;strong fairness&lt;/strong&gt;: if a behavior is enabled repeatedly, it should be executed at some point. So let’s add strong fairness to &lt;code&gt;BToC&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;Spec == Init /\ [][Next]_state /\ WF_state(Next) /\ SF_state(BToC)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;After this, the check of &lt;code&gt;&amp;lt;&amp;gt;(state = &quot;c&quot;)&lt;/code&gt; can pass again.&lt;/p&gt;

&lt;p&gt;Let’s sum it up. Liveness is a property that the system must satisfies and can be checked with TLC. It usually defines that the system can eventually reach a state. In this case, it’s &lt;code&gt;&amp;lt;&amp;gt;(state = &quot;c&quot;)&lt;/code&gt;. Weak fairness is a part of the specification that says a behavior will eventually happen if it’s enabled continuously, which means &lt;code&gt;a -&amp;gt; b -&amp;gt; b -&amp;gt; b -&amp;gt; ... -&amp;gt; c&lt;/code&gt; in this example. Strong fairness is also a part of the specification, which says a behavior will eventually happen if it’s enabled repeatedly, which means &lt;code&gt;a -&amp;gt; b -&amp;gt; a -&amp;gt; b -&amp;gt; ... -&amp;gt; c&lt;/code&gt; in this case.&lt;/p&gt;</content><author><name></name></author><category term="TLA+" /><category term="Formal Proof" /><category term="Distributed System" /><category term="liveness" /><category term="fairness" /><summary type="html">Recently I’m learning TLA+: A language that can specify distributed and concurrent systems. Though it’s very different from most programming languages, the idea behind it is very simple: basically what it does is specifying a state machine. The TLA+ tool box has a model checker called TLC that can explore all the states of the state machine and check properties of the system. If the state space is too big or infinite, we can define a reasonable subset of it to check. So it will not always guarantee the correctness. However, the tool box also has a more advanced tool called TLA+ Proof System (TLAPS) to write formal proof like Coq. I highly recommend the video course to learn TLA+. It’s short and includes TLC. I first started with The TLA+ Book Specifying Systems which doesn’t include TLC, and I was wondering how specify a system can check properties of it.</summary></entry><entry><title type="html">Aurora Database</title><link href="https://www.binwang.me/2020-09-16-Aurora-Database.html" rel="alternate" type="text/html" title="Aurora Database" /><published>2020-09-16T00:00:00-04:00</published><updated>2020-09-16T00:00:00-04:00</updated><id>https://www.binwang.me/Aurora-Database</id><content type="html" xml:base="https://www.binwang.me/2020-09-16-Aurora-Database.html">&lt;p&gt;I’m very interested in databases and distributed systems. It’s shocking that how less in depth articles about databases are on the Internet. I wrote an &lt;a href=&quot;/2018-07-29-A-Review-on-Spanner-and-Open-Source-Implementations.html&quot;&gt;article about Spanner&lt;/a&gt; before and I’m very satisfied with that. So recently, I’m looking at another interesting database &lt;a href=&quot;https://aws.amazon.com/rds/aurora/&quot;&gt;Aurora&lt;/a&gt;. This article is about it.&lt;/p&gt;

&lt;p&gt;Aurora is a cloud based database from Amazon. It’s not as fancy as Spanner, which provides serializable and linearizable in a globally distributed system. Aurora is much more practice. In really life, most business don’t need global distributed database. They only need a database that can survive from a data center failure. In this case, Aurora can provide much higher throughput and much lower latency.&lt;/p&gt;

&lt;p&gt;In this article, we will have a look at how Aurora implements transaction in a distributed system. And then we talk about how it gets a better performance than setups like MySQL replication.&lt;/p&gt;

&lt;p&gt;The discussion of this article is based on the &lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html&quot;&gt;AWS Aurora user manual&lt;/a&gt; and 2 papers that describes Aurora architecture:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://media.amazonwebservices.com/blog/2017/aurora-design-considerations-paper.pdf&quot;&gt;Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/3183713.3196937&quot;&gt;Amazon Aurora: On Avoiding Distributed Consensus for I/Os, Commits, and Membership Changes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basic-properties-of-aurora&quot;&gt;Basic Properties of Aurora&lt;/h2&gt;

&lt;p&gt;Aurora has both single master and multi-master setup. Multi-master setup provides weaker isolation levels, and there are less papers and resources about it. So we will focus on single master setup in this article. With this single master setup, Aurora can provide serializable isolation.&lt;/p&gt;

&lt;p&gt;By master node, I mean the database node in Aurora. Aurora has a database node and multiple storage nodes. The database node receives client requests and sends WAL logs to each storage node. Storage nodes process WAL logs and write buffers/pages independently.&lt;/p&gt;

&lt;h2 id=&quot;how-transaction-is-implemented&quot;&gt;How Transaction Is Implemented&lt;/h2&gt;

&lt;p&gt;The most interesting part of a distributed system is how it keeps data consistent. This is the most difficult and error-prone part:  if the performance is bad, it’s obvious. But if the transaction is implemented in the wrong way, the data looks good at most of the time. Once the race condition is triggered, the data is corrupt and it’s very hard to debug and find the reason.&lt;/p&gt;

&lt;p&gt;Because Aurora a single master system, the transaction implementation is relatively easy.&lt;/p&gt;

&lt;p&gt;In the case of writes, the database instance generated monotone increasing IDs for WAL log entries and send them to storage instances. Storage instance process the logs in the order of IDs. Once the storage instance parsed a log entry, it will send response to database instance. After database instance receives the responses for all the log entries in a transaction, it will mark this transaction as committed and response to client.&lt;/p&gt;

&lt;p&gt;In the case of read, because database instance keeps track of all the log IDs and transactions. It knows the most recent log ID for a committed transaction. The database instance also tracks which storage instances has parsed which log entries. So it can use this log ID to query a snapshot on storage instance.&lt;/p&gt;

&lt;h2 id=&quot;how-quorum-is-used&quot;&gt;How Quorum Is Used&lt;/h2&gt;

&lt;p&gt;When the database instance send WAL logs to storage instances, it doesn’t wait for all of them to response to consider the write as successful. Instead, it only needs the confirmation from some of them. This is called a write quorum. In Aurora, each data segment has 6 nodes distributed among 3 availability zones. The write quorum for Aurora is 4. Which means the writes are persistent on at least 2 availability zones.&lt;/p&gt;

&lt;p&gt;Why a write quorum is enough instead of all the nodes? Let’s introduce the read quorum. Read quorum means how many nodes you need to read when query the data. As long as &lt;code&gt;read quorum + write quorum &amp;gt; number of nodes&lt;/code&gt;, there will be overlap node between the read quorum and write quorum, which ensure we will always read the newest data. In Aurora, read quorum is set to 3.&lt;/p&gt;

&lt;p&gt;However, since Aurora tracks all the log IDs and storage nodes status, it knows which storage node has the newest data, so it doesn’t really need read quorum for very read request. Instead, the read quorum is used in failure recovery.&lt;/p&gt;

&lt;h2 id=&quot;how-failure-is-handled&quot;&gt;How Failure is Handled&lt;/h2&gt;

&lt;h3 id=&quot;storage-node-failure&quot;&gt;Storage Node Failure&lt;/h3&gt;

&lt;p&gt;Since Aurora has multiple storage nodes and use write quorum to ensure the data is written to most of them, it’s trivial for storage node failure handling: as long as there is no more than 2 storage nodes failed, the database can still working. As long as no more than 3 storage nodes failed, the database can still handle read requests. Because it has 2 nodes in each availability zone, it means it can survive from failure of 1 availability zone. Once a storage node is failed, a new storage instance will start and copy data from other storage nodes.&lt;/p&gt;

&lt;p&gt;In addition, Aurora also backup data to S3. So even if the database is totally destroyed, it can still recover a snapshot.&lt;/p&gt;

&lt;h3 id=&quot;database-node-failure&quot;&gt;Database Node Failure&lt;/h3&gt;

&lt;p&gt;Since there is only one database node, it’s very important to handle its failure. The database node maintains the log ID for the latest completed transaction, which is critical to maintain transaction correctness. In case of database node failure, Aurora recovers this ID from storage nodes: each storage node knows the log ID for its latest transaction, so with a read quorum, it can get the latest transaction ID across the cluster.&lt;/p&gt;

&lt;p&gt;There is a tricky part here: this may recovery the transaction that has written successfully to a write quorum, but never responded to the database node and client. This is Okay since if client lost connection to database and doesn’t get response, the commit can either be successful or failed. This is true for all database system because there is just no way to deal with that. A deeper discussion is out of topic and involves &lt;a href=&quot;https://en.wikipedia.org/wiki/Two_Generals%27_Problem&quot;&gt;two general’s problem&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-aurora-can-avoid-the-usage-of-two-phase-commit&quot;&gt;Why Aurora Can Avoid the Usage of Two Phase Commit&lt;/h2&gt;

&lt;p&gt;Usually, in a distributed system, in order to maintain data consistency, we need to use some protocols like two phase commit (2PC) or Paxos. In 2PC, there is a coordinate node that receive all client requests. Then it asks all the storage nodes whether they can handle the request (phase 1). If all the nodes processed the request to a commit point (but not commit) and response they can handle it, the coordinate will send commit request to all the nodes (phase 2), and mark it as complete once storage nodes complete the commit. If there is any storage node response it cannot handle the request in phase 1, the coordinate node will send rollback request to each node. And mark the transaction as failed once all storage nodes rolled back the changes.&lt;/p&gt;

&lt;p&gt;2PC is slow because it needs 2 rounds of requests for all nodes. Once a node response they can write the data in phase 1, it must do that. Even the node is failed, it must recover and write it. Otherwise the system cannot continue to handle further requests.&lt;/p&gt;

&lt;p&gt;I’m always skeptical when people claim they don’t need data consistency protocols like Paxos and 2PC. It’s also not clear in the first paper how Aurora is able to avoid it. However, in the second paper, there is a key sentence explains that:&lt;/p&gt;

&lt;p&gt;“This is possible because storage nodes do not have a vote in determining whether to accept a write, they must do so. Locking, transaction management, deadlocks, constraints, and other con-ditions that influence whether an operation may proceed are all resolved at the database tier.”&lt;/p&gt;

&lt;p&gt;This means database node already knows whether storage nodes can handle the write or not. So phase 1 in 2PC is not needed. It’s not clear whether it needs to request storage node to resolve these things, but even it’s needed, it only needs to request one storage node instead of all of them. In short, Aurora can avoid 2PC because database node knows and does much more things than coordinate node in 2PC, and storage nodes stores same data so it doesn’t need to request all of them.&lt;/p&gt;

&lt;h2 id=&quot;how-performance-is-improved&quot;&gt;How Performance Is Improved&lt;/h2&gt;

&lt;p&gt;We’ve talked lots of transaction management of Aurora. But the true contribution of Aurora is the performance improvement. It is accomplished in multiple ways:&lt;/p&gt;

&lt;p&gt;First of all, it only replicates WAL logs. This saves lots of network bandwidth even it means each node needs to do more computation. Apparently, network bandwidth is more important in AWS while it’s not necessary true in other systems. So it’s very important to know the bottle neck and optimize with purpose.&lt;/p&gt;

&lt;p&gt;Second, as we said before, Aurora avoids slow protocols like 2PC.&lt;/p&gt;

&lt;p&gt;At last, Aurora make the system async when possible. You can find examples everywhere:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When database node handling client requests, it doesn’t block and wait response from storage nodes. It puts works in a queue and responds to client after enough storage nodes have responded.&lt;/li&gt;
  &lt;li&gt;When storage node receiving logs, it doesn’t receive them one by one. Instead, it receives them without specific order but order them while parsing.&lt;/li&gt;
  &lt;li&gt;When storage node writing data, the write is considered successful as long as the WAL log is persistent. It can process the logs and write buffers and pages in the background.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;System designs are trade-offs. I’m not a fan of sacrificing data consistency for performance: people don’t always make right assumption about consistency requirement. Aurora doesn’t do that. Instead, it builds a single master system with multiple slave nodes that connected by low latency network. I think Aurora did a great job to get the sweet spot between availability and performance.&lt;/p&gt;</content><author><name></name></author><category term="Aurora" /><category term="distributed system" /><category term="database" /><category term="2PC" /><summary type="html">I’m very interested in databases and distributed systems. It’s shocking that how less in depth articles about databases are on the Internet. I wrote an article about Spanner before and I’m very satisfied with that. So recently, I’m looking at another interesting database Aurora. This article is about it.</summary></entry><entry><title type="html">Deploy Matrix for Users in China</title><link href="https://www.binwang.me/2020-09-08-Build-An-Instant-Messaging-System-without-Censorship-Deployment-Options.html" rel="alternate" type="text/html" title="Deploy Matrix for Users in China" /><published>2020-09-08T00:00:00-04:00</published><updated>2020-09-08T00:00:00-04:00</updated><id>https://www.binwang.me/Build-An-Instant-Messaging-System-without-Censorship-Deployment-Options</id><content type="html" xml:base="https://www.binwang.me/2020-09-08-Build-An-Instant-Messaging-System-without-Censorship-Deployment-Options.html">&lt;p&gt;&lt;em&gt;This article belongs of a series of articles that talk about how to build an instant messaging system without censorship:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-08-23-Build-An-Instant_Messaging-System-without-Censorship-Choose-the-right-technology.html&quot;&gt;Matrix: A Self Hosted Instant Messaging Solution with End to End Encryption&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-08-29-Build-An-Instant_Messaging-System-without-Censorship-Choose-An-Overview-of-Chinese-Internet-Censorship-Strategy.html&quot;&gt;Overview of China’s Internet censorship strategy&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-09-08-Build-An-Instant-Messaging-System-without-Censorship-Deployment-Options.html&quot;&gt;Deploy Matrix for Users in China&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the previous articles, we chose Matrix as our IM service solution. We also discussed how the Internet is censored in China. In this article, we will discuss multiple ways to deploy Matrix service. The goals are providing the best user experience while avoiding the censorship. Specifically, we want to meet these requirements:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Avoid the government censorship.&lt;/li&gt;
  &lt;li&gt;Make the latency between users and server as low as possible.&lt;/li&gt;
  &lt;li&gt;Make it easy for end users to setup.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will explore the deployment options. And compare them at the end.&lt;/p&gt;

&lt;h2 id=&quot;1-deploy-a-single-im-server-outside-china&quot;&gt;1. Deploy A Single IM Server Outside China&lt;/h2&gt;

&lt;p&gt;The easiest solution would be deploying a single Matrix server. There are a lot of requirements to deploy a server in China, so it would be better to deploy a server outside China:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;   Users in China
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;        Server
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt; Users outside China
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;But as we discussed in the previous article, the latency for users in China will be high. Sometimes, GFW may completely block the server so that the users cannot connect at all.&lt;/p&gt;

&lt;p&gt;Matrix is a distributed protocol, so we can deploy multiple servers to give the best experience for all users. From here, we will explore the options with multiple servers: a server outside China and at least one server in China.&lt;/p&gt;

&lt;h2 id=&quot;2-deploy-a-server-in-china-with-license&quot;&gt;2. Deploy A Server in China with License&lt;/h2&gt;

&lt;p&gt;The most regular way to deploy a service in China is to get all the required licenses. Then the users in China can connect to this server:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;   Users in China
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;   Server in China  &amp;lt;----- Public DNS Record
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt; Server outside China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt; Users outside China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The shortcomings are also obvious:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It needs some work to get a license. Especially it would be hard for an individual to get a license for IM service. It’s possible to hide the business purpose while applying, but there are risks.&lt;/li&gt;
  &lt;li&gt;Once the service is on government’s record, government can track it and require information from the server. Even the messages are end to end encrypted, some information on the server can still be sensitive.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-deploy-a-server-in-china-without-dns-resolving&quot;&gt;3. Deploy A Server in China without DNS Resolving&lt;/h2&gt;

&lt;p&gt;The main reason we need a license to deploy a server in China is because the IDC and cloud providers may block the server if a domain without license is resolving to it. So one way to avoid the blocking is, don’t bind a domain name to the server. But we cannot use IP address directly either: we need HTTPS to encrypt the traffic. And the communications between servers also depends on domain names.&lt;/p&gt;

&lt;p&gt;So we need to find a way to resolve domain name without public DNS server. Though it’s hard, it’s not impossible. For example, you can change the DNS record on the computer by modifying the hosts file. Or you can create a DNS server on the home router. For the mobile phones, it’s much harder. But I believe there are apps can do that.&lt;/p&gt;

&lt;p&gt;So this solution is don’t register the domain name in public DNS servers. Instead, add the records on end user devices:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;   Users in China
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;   (Add DNS record)
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;   Server in China
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt; Server outside China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;   (Add DNS record)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;           ^
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;           |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;           V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt; Users outside China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-deploy-another-server-in-china-with-personal-internet&quot;&gt;4. Deploy Another Server in China with Personal Internet&lt;/h2&gt;

&lt;p&gt;As we mentioned in the last article, while cloud providers and IDC block servers, ISP doesn’t block high number ports. So if we can deploy another server at home and point the domain name to this server, the end user doesn’t need to setup custom DNS records. We will still keep the other server in cloud/IDC for the stable connection between servers.&lt;/p&gt;

&lt;p&gt;For the two servers in China, only one of them needs to host the IM service. The other one can just be a proxy.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;        Users in China
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;              ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;              |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;              V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;      Proxy server in China    &amp;lt;----- Public DNS Record
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;        (Home Internet)
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;              ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;              |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;              V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;      IM Server in China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;         (Cloud/IDC)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;              ^
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;              |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;              V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;     Server outside China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;(Add DNS record that resolves domain
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;&lt;/span&gt;  name to server on Cloud/IDC)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;&lt;/span&gt;              ^
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;&lt;/span&gt;              |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;              V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;&lt;/span&gt;    Users outside China
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n22&quot; name=&quot;n22&quot;&gt;22&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;There are also disadvantages for this solution: other than we need another server, the home Internet may not be able to provide the best speed for users in China.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In the table below, we can compare them by the censorship circumvention, service speed and end user setup easiness:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Deployment Option&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Censorship Circumvention&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Service Speed&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;End User Setup Easiness&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 stars&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1 star&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 stars&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1 star&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 stars&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 stars&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2 stars&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 stars&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1 star&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2 stars&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2 stars&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 stars&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I believe the world will be a better place if everyone can communicate with each other freely. But it’s never easy. Even though we can deploy the services and make it accessible from China, the most popular Matrix client Element (Riot) is banned in China. There is a long way to go. I hope I can help even a little bit by sharing some technical information here.&lt;/p&gt;</content><author><name></name></author><category term="technology" /><category term="Matrix" /><category term="instant messaging" /><summary type="html">This article belongs of a series of articles that talk about how to build an instant messaging system without censorship:</summary></entry><entry><title type="html">An Overview of China’s Internet Censorship Strategy</title><link href="https://www.binwang.me/2020-08-29-Build-An-Instant_Messaging-System-without-Censorship-Choose-An-Overview-of-Chinese-Internet-Censorship-Strategy.html" rel="alternate" type="text/html" title="An Overview of China’s Internet Censorship Strategy" /><published>2020-08-29T00:00:00-04:00</published><updated>2020-08-29T00:00:00-04:00</updated><id>https://www.binwang.me/Build-An-Instant_Messaging-System-without-Censorship-Choose-An-Overview-of-Chinese-Internet-Censorship-Strategy</id><content type="html" xml:base="https://www.binwang.me/2020-08-29-Build-An-Instant_Messaging-System-without-Censorship-Choose-An-Overview-of-Chinese-Internet-Censorship-Strategy.html">&lt;p&gt;&lt;em&gt;Updated at sep 6, 2020: change the title and add other articles in this series.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article belongs of a series of articles that talk about how to build an instant messaging system without censorship:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-08-23-Build-An-Instant_Messaging-System-without-Censorship-Choose-the-right-technology.html&quot;&gt;Matrix: A Self Hosted Instant Messaging Solution with End to End Encryption&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-08-29-Build-An-Instant_Messaging-System-without-Censorship-Choose-An-Overview-of-Chinese-Internet-Censorship-Strategy.html&quot;&gt;Overview of China’s Internet censorship strategy&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-09-08-Build-An-Instant-Messaging-System-without-Censorship-Deployment-Options.html&quot;&gt;Deploy Matrix for Users in China&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are two parts of Internet censorship in China:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Intra country network traffic: the sender and the receiver are all located in China.&lt;/li&gt;
  &lt;li&gt;Inter country network traffic: sender or receiver is in China, and another one is outside China.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The difference is because Chinese government has more control if all the devices within the network traffic are in China. It can make rules, and force ISP, IDC, cloud providers and service providers to follow. Otherwise, it can only uses some technical methods to block traffic.&lt;/p&gt;

&lt;h2 id=&quot;intra-country-traffic&quot;&gt;Intra Country Traffic&lt;/h2&gt;

&lt;p&gt;Let’s first talk about the censorship strategy for the network traffic inside China. It’s done by mapping the instances on Internet to real persons and organizations.&lt;/p&gt;

&lt;p&gt;For the online service consumers, which are usually individuals, it’s done by mapping the personal ID to Internet instances like IP addresses and service accounts. An ID is required when apply for Internet access from ISP and when apply for a phone number. When register an account for any online service, a phone number is needed. So it can map network information in these ways:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If you are using a home Internet, it can map from IP address to ID.&lt;/li&gt;
  &lt;li&gt;If you are using a mobile network, it can map from IP address to phone number to ID.&lt;/li&gt;
  &lt;li&gt;If you are using any online account, it can map from account to phone number to ID.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For the online service providers, it’s done by licensing. For anyone who wants to provide Internet service, they must apply for a license from government. In order to get a license, you need to provide the hosts IP addresses, domain names, ID, personal photo and the business purpose. The government will store all the information and may request the provider to hand over information as needed.&lt;/p&gt;

&lt;p&gt;In China, without a license, the network ports like 53 (DNS), 80 (HTTP) and 443 (HTTPS) are blocked by ISP for all devices. Cloud providers and IDC will also block hosts if they find any DNS without license is resolved to them. Home internet providers will not check DNS resolving, but it’s impractical to host any serious business on home Internet: it would be too slow for people using other ISP.&lt;/p&gt;

&lt;h2 id=&quot;inter-country-traffic&quot;&gt;Inter Country Traffic&lt;/h2&gt;

&lt;p&gt;The censorship of inter country traffic is mainly done by &lt;a href=&quot;https://en.wikipedia.org/wiki/Great_Firewall#Blocking_methods&quot;&gt;Great Fire Wall&lt;/a&gt; (GFW). It’s built by Chinese government that filters and blocks the network traffics between China and other countries. It uses a lot of university resources, and is widely known even there is no official acknowledgement of its existence. As a victim of it for many years, I know it just too well. It has mainly these technologies to block traffics:&lt;/p&gt;

&lt;p&gt;First of all, DNS records pollution. DNS server is used to resolve domain name to IP address. ISP usually provide DNS server. The devices will use that by default to have the best speed. So if the government wants to block some service, it will change DNS records on DNS servers in China. Usually it’s the first method to use. It’s also the easiest to fix: just change to another DNS server. Usually a good DNS server outside China is blocked by IP (another blocking method we will talk below). Even it’s illegal to host custom DNS server, you can still change the DNS records on home router or on the personal computer. However, it can be tricky for mobile phones.&lt;/p&gt;

&lt;p&gt;Another straightforward blocking method is to block the IP addresses. It’s not the most reliable method because the IP addresses can change. So normally it will block a range of IP addresses. But it’s also dangerous because of the popularity of cloud services. The range of IP may belongs to the cloud provider instead of the service provider. So it may block more IP addresses than needed. It can accidentally block other important foreign services. So the government used to use this method carefully, but I feel it doesn’t care to block innocent IPs recently. For example, a lot of CDN and small websites are not useable because of this. If the IP is blocked, the only way to access it is using a proxy.&lt;/p&gt;

&lt;p&gt;After people start using proxy to access the blocked hosts, GFW develops new methods to block proxies. At first it’s easy, because the proxy methods like VPN is very easy to identify. (Because VPN also has legit usages, the government also starts to require license for VPN). After people start developing proxy software specific to bypass GFW, GFW starts to detect patterns to identify and block these proxies. It’s very hard to detect patterns with 100% accuracy, so it needs to choose either to miss some of the proxies or block some of the legit usages. And recently it tends to choose the later one more and more.&lt;/p&gt;

&lt;p&gt;However, in the latest case, it has an exception. For the hosts provided by IDC or cloud services, it tends to have a looser restriction. For example, if I ssh to a personal computer in China from Canada, the connection will usually be disconnected after some time. But if I ssh to a server in China, it’s usually very stable. It probably considers these hosts have more serious business purpose.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We had an overview of the Internet censorship methods in China. I believe it will get back fired once the restrictions are more and more strict and ridiculous. In the next article, we will explore how to deploy an IM server in such environment and make it as convenience as possible for end users.&lt;/p&gt;</content><author><name></name></author><category term="technology" /><category term="GFW" /><category term="China" /><category term="Internet" /><summary type="html">Updated at sep 6, 2020: change the title and add other articles in this series.</summary></entry><entry><title type="html">Matrix: A Self Hosted Instant Messaging Solution with End to End Encryption</title><link href="https://www.binwang.me/2020-08-23-Build-An-Instant_Messaging-System-without-Censorship-Choose-the-right-technology.html" rel="alternate" type="text/html" title="Matrix: A Self Hosted Instant Messaging Solution with End to End Encryption" /><published>2020-08-23T00:00:00-04:00</published><updated>2020-08-23T00:00:00-04:00</updated><id>https://www.binwang.me/Build-An-Instant_Messaging-System-without-Censorship-Choose-the-right-technology</id><content type="html" xml:base="https://www.binwang.me/2020-08-23-Build-An-Instant_Messaging-System-without-Censorship-Choose-the-right-technology.html">&lt;p&gt;&lt;em&gt;Updated at sep 6, 2020: change the title and add other articles in this series.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article belongs of a series of articles that talk about how to build an instant messaging system without censorship:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-08-23-Build-An-Instant_Messaging-System-without-Censorship-Choose-the-right-technology.html&quot;&gt;Matrix: A Self Hosted Instant Messaging Solution with End to End Encryption&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-08-29-Build-An-Instant_Messaging-System-without-Censorship-Choose-An-Overview-of-Chinese-Internet-Censorship-Strategy.html&quot;&gt;Overview of China’s Internet censorship strategy&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2020-09-08-Build-An-Instant-Messaging-System-without-Censorship-Deployment-Options.html&quot;&gt;Deploy Matrix for Users in China&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Instant messaging (IM) software maybe the most commonly used type of software. Privacy is especially important for instant messaging apps. No one wants to be eavesdropped when talking with friends and family. However, most of the instant messaging applications don’t have end to end encryption, which means the service provider can see all the messages. This information is much more sensitive than financial information, yet we have regulations for banks but have basically zero regulation for instant messaging providers. Sometimes it’s even worse while having regulations: Chinese government can require the provider to hand over server data &lt;a href=&quot;http://www.cac.gov.cn/2016-11/07/c_1119867116_2.htm&quot;&gt;by law&lt;/a&gt; (Ironically, the offical website of Cyberspace Administration of China doesn’t even have https). That’s why TikTok is such a hot topic recently. And while Tencent saying they never look at the messages in WeChat, I never trust them. There are even &lt;a href=&quot;https://news.qq.com/a/20151012/010241.htm#p=4&quot;&gt;news&lt;/a&gt; that showing QQ (another IM software provided by Tencent that is very similar with WeChat) messages helped the police to find criminals. Even if the providers don’t look at the data as they declared, as long as they store the data, it becomes permanent record. You don’t know who will use that data on what purpose in the future.&lt;/p&gt;

&lt;p&gt;There are a few IM software that have end to end encryption built in. However, each of them has some shortcomings which prevent them to be truly secure. For example, &lt;a href=&quot;https://www.signal.org/&quot;&gt;Signal&lt;/a&gt; is considered as the most secure one, but it needs a phone number and use it as verification sometimes. As we all know, text message is very easy to be hacked. While the hacker cannot view the message history in Signal, it may makes the account disappear. (The technology details behind this is complex, I may write another article to explain this in the future). WhatsApp is another popular one. But it’s not open sourced so it’s hard to tell if it’s doing something secretly or really implementing the end to end algorithm correctly. Most important of all, end to end encryption doesn’t mean decentralize. They all have centralized servers. And unfortunately, the servers are all blocked by China.&lt;/p&gt;

&lt;p&gt;There are also some P2P IM software. I tried a lot of them. Most of them don’t have end to end encryption. And they are all too slow to have a good user experience.&lt;/p&gt;

&lt;p&gt;So the ideal solution would be deploying an instance messaging system with end to end encryption by myself. Signal is open sourced. The server code is clean and easy to deploy. But as I said before, I don’t like the use of phone number. And because it’s not designed for decentralized deployment, the iOS and Android client needs to be modified to bind push keys from Apple and Google in order to have notifications. Downloading a customized version of client is not very user friendly.&lt;/p&gt;

&lt;p&gt;Then I found &lt;a href=&quot;https://matrix.org/&quot;&gt;Matrix&lt;/a&gt;, an open standard for instant messaging. It’s decentralized by design. People can have different service providers like Email. People can speak with other persons on other server. The servers talk with each other to deliver messages. The username of Matrix contains the server name, so the servers can tell where to deliver messages. The diagram below shows how user1 on &lt;code&gt;server1.com&lt;/code&gt; talks with user2 on &lt;code&gt;server2.com&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt; User: @user1:server1.com
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;          |    ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;          |    |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;          V    |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt; Server: server1.com
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;          |    ^
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;          |    |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;          V    |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt; Server: server2.com
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;          |    ^
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;          |    |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;          V    |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt; User: @user2:server2.com
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;While it has a lot of &lt;a href=&quot;https://matrix.org/clients-matrix/&quot;&gt;clients&lt;/a&gt;, the most popular one is &lt;a href=&quot;https://element.io/&quot;&gt;Element&lt;/a&gt;(used to be named Riot). The most popular server is &lt;a href=&quot;https://github.com/matrix-org/synapse&quot;&gt;Synapse&lt;/a&gt;. The authentication server is separated from the messaging server. &lt;a href=&quot;https://github.com/matrix-org/sydent&quot;&gt;Sydent&lt;/a&gt; is a one of the implementations. Synapse and Sydent are both written in Python. While it takes some efforts to deploy it, they are both well documented and shouldn’t be too hard for someone with server admin experience.&lt;/p&gt;

&lt;p&gt;It would be much easier if we live in a world without Internet censorship. However, Chinese government built powerful tools and strict policies around it. In the future articles of this series, I will give a brief overview of Chinese goverment Internet censorship strategies, and some options to deploy Matrix servers with such restrictions.&lt;/p&gt;</content><author><name></name></author><category term="technology" /><category term="Matrix" /><category term="instant messaging" /><category term="censorship" /><summary type="html">Updated at sep 6, 2020: change the title and add other articles in this series.</summary></entry><entry><title type="html">Use RSS and Kindle to Read News</title><link href="https://www.binwang.me/2020-08-15-Use-RSS-and-Kindle-to-Read-News.html" rel="alternate" type="text/html" title="Use RSS and Kindle to Read News" /><published>2020-08-15T00:00:00-04:00</published><updated>2020-08-15T00:00:00-04:00</updated><id>https://www.binwang.me/Use-RSS-and-Kindle-to-Read-News</id><content type="html" xml:base="https://www.binwang.me/2020-08-15-Use-RSS-and-Kindle-to-Read-News.html">&lt;p&gt;In a &lt;a href=&quot;/2020-08-02-What-Is-Wrong-abount-Recommendation-System.html&quot;&gt;previous blog post&lt;/a&gt;, I talked about one of the reasons I want to use mobile phone and social network less often. In this article, I will talk about one of the strategies of doing that: don’t read news on mobile phone or computer. Use Kindle or other E-Readers instead. Here is how I do it:&lt;/p&gt;

&lt;h2 id=&quot;use-rss-to-get-news&quot;&gt;Use RSS to Get News&lt;/h2&gt;

&lt;p&gt;RSS was so popular before Google Reader was killed. You can choose the sources by yourself instead of some black box recommendation algorithms. I talked about what’s wrong about the recommendation system in &lt;a href=&quot;/2020-08-02-What-Is-Wrong-abount-Recommendation-System.html&quot;&gt;a previous post&lt;/a&gt;. RSS is also an open protocol, so you can choose whatever software you want without vendor lock-in.&lt;/p&gt;

&lt;p&gt;RSS is open and flexible, so people have various ways of using it. As a person who only wants to know important news and doesn’t want to lost in the overwhelming information, I subscribe to a few high quality sources. Basically 1 or 2 sources for local news, global news, tech news and culture. That’s enough for 1~2 hour’s daily reading. For the news sources, they should be focus on facts instead of its own opinion, and should cover the whole story instead of partial fact. With limited sources, I can focus more on the whole article instead of a lot titles.&lt;/p&gt;

&lt;p&gt;Many websites doesn’t provide full article RSS output. Some doesn’t even provide RSS at all. But as long as the content is available online, we can use tools to crawl and convert it to an RSS feed. There is a tool called &lt;a href=&quot;https://github.com/DIYgod/RSSHub&quot;&gt;RSSHub&lt;/a&gt; does exactly this. I also contributed some code to it.&lt;/p&gt;

&lt;h2 id=&quot;use-calibre-to-send-rss-feeds-to-kindle&quot;&gt;Use Calibre to Send RSS Feeds to Kindle&lt;/h2&gt;

&lt;p&gt;Kindle doesn’t have any RSS reader. So once we have the RSS sources ready, we need to import them. There were a lot of platforms to do that, but most of them are not reliable anymore. Luckily, we have an even better option now: &lt;a href=&quot;https://calibre-ebook.com/&quot;&gt;Calibre&lt;/a&gt;. It’s a very powerful e-book management software. Most importantly, it’s free and open source. So you don’t need to give any information to anyone else.&lt;/p&gt;

&lt;p&gt;The feature is available at “Fetch News” in Calibre’s menu. It turns the RSS sources into an e-book and send it to an Email address (Most E-readers, including Kindle, allow you to transfer books by sending an Email). It has many pre-defined sources but you can also add custom RSS sources. You can do it manually or import an OPML file. It can be configured to send the e-book daily or on specific days in a week. The only downside is you need to leave it running in the background. But since it doesn’t collect your data secretly, it barely uses any resource in the background.&lt;/p&gt;

&lt;h2 id=&quot;use-kindle-or-other-e-readers-instead-of-phone-or-computer&quot;&gt;Use Kindle (Or Other E-Readers) Instead of Phone or Computer&lt;/h2&gt;

&lt;p&gt;I got a Kindle after I graduated from university. I find it’s the most useful thing I’ve bought in that price range. I read much more books because of it. It’s so easy to take so I usually read it during commute. (My readings dropped a lot after I started working from home). And the screen likes paper so it doesn’t hurt my eyes. Some people may find low fresh rate E-Ink display is hard too use, but it’s perfect for book reading. And just because of that, I can focus on reading instead of watching videos or play games.&lt;/p&gt;

&lt;p&gt;After I started reading news on Kindle, I find I can read more carefully and completely. Though I spent much less time on reading news, I don’t feel I missed anything. Maybe the only things I missed are the rumors without fact check and click-bias content. I feel I’m still connected to the world, but with a much more peaceful mind.&lt;/p&gt;</content><author><name></name></author><category term="technology" /><category term="RSS" /><summary type="html">In a previous blog post, I talked about one of the reasons I want to use mobile phone and social network less often. In this article, I will talk about one of the strategies of doing that: don’t read news on mobile phone or computer. Use Kindle or other E-Readers instead. Here is how I do it:</summary></entry><entry xml:lang="zh"><title type="html">盛唐诗人和远游</title><link href="https://www.binwang.me/2020-08-09-%E7%9B%9B%E5%94%90%E8%AF%97%E4%BA%BA%E5%92%8C%E8%BF%9C%E6%B8%B8.html" rel="alternate" type="text/html" title="盛唐诗人和远游" /><published>2020-08-09T00:00:00-04:00</published><updated>2020-08-09T00:00:00-04:00</updated><id>https://www.binwang.me/%E7%9B%9B%E5%94%90%E8%AF%97%E4%BA%BA%E5%92%8C%E8%BF%9C%E6%B8%B8</id><content type="html" xml:base="https://www.binwang.me/2020-08-09-%E7%9B%9B%E5%94%90%E8%AF%97%E4%BA%BA%E5%92%8C%E8%BF%9C%E6%B8%B8.html">&lt;blockquote&gt;
  &lt;p&gt;少时壮且厉，抚剑独行游。&lt;/p&gt;

  &lt;p&gt;谁言行游近？张掖至幽州。&lt;/p&gt;

  &lt;p&gt;– 陶渊明&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最近看了两个系列的视频，一个是戴建业老师讲盛唐诗人和风貌，另一个是况露的骑行纪录片《行疆》。这两个系列的视频主题碰巧还挺有关联，看的时候也颇有感触，所以在这里随便写些感想。&lt;/p&gt;

&lt;p&gt;唐朝是中国历史上最强盛的时代。不仅国力强盛，文化更加强盛。科举制度使官场不再被贵族垄断。大批的文人有机会参与到国家决策当中。所以唐朝的人们都透漏着强烈的自信，以天下为己任。在这一方面，唐朝比如今的中国还要强上不少。如今虽然也有高考，但是想通过高考进入仕途，参与政治，“愿上大臣书”，恐怕并不容易。初唐的积累，到了开元年间达到了顶峰。文人们在青年时仗剑壮游，踏遍名山大川，真是何其浪漫！&lt;/p&gt;

&lt;p&gt;反观现在，虽然科技更加发达，交通也更加方便，但是生活不易，能真的在年轻时远游一段时间的，还是不多。所以当我发现《行疆》这个纪录片的时候，看片中的骑行者一人从武汉出发，经西安入甘肃、青海、新疆和西藏，很是羡慕。拍这个纪录片的设备就算放在当时也并不先进，镜头大多数时候也是摇摇晃晃，但是反而因此而显得真实。尤其是其中一些细节让人感触良多。如在山青水秀的月牙湾中种药捕鱼的程老哥，怀揣摩托旅行梦想的西安交警，从河南移民到新疆四十多年未回家乡的大爷的一声长叹。&lt;/p&gt;

&lt;p&gt;远游对我来说一直是一个向往。因此我选了远在哈尔滨的大学。大学时候，因为经济原因，只是跟着程序竞赛去过东北的一些大城市以及福州。自从工作之后，经济不是太大问题，但是时间成了问题。虽然如此，也会挤时间去一些之前一直想去的城市，而且所幸前两年在上家公司可以在家工作，所以几年下来，也去了不少地方：去过中国东部大部分的省份，去过日韩东南亚，也曾经沿着美国的太平洋海岸自驾过。但遗憾的是一直未曾去过中国的西部。估计以后如果安定下来了，有房贷要还，再去远游的机会就更加少了。&lt;/p&gt;

&lt;p&gt;李白的诗歌之所以吸引人，是因为建功立业和追求自由之间的矛盾。而我辈虽没有建功立业那么远大的志向，但是无论如何还是想有一番作为的：不管是在专业上有一些成就，还是在生活上有一定的保障。而要实现这些，就不免和自由有一定的冲突。所以有时读古人诗，真是感同身受，彻夜长叹。虽有此苦恼，然而时隔千载，有天才的诗篇写出我们的感情，也真是幸事了！&lt;/p&gt;</content><author><name></name></author><category term="life" /><category term="poem" /><summary type="html">少时壮且厉，抚剑独行游。 谁言行游近？张掖至幽州。 – 陶渊明</summary></entry><entry><title type="html">What Is Wrong about Recommendation System</title><link href="https://www.binwang.me/2020-08-02-What-Is-Wrong-abount-Recommendation-System.html" rel="alternate" type="text/html" title="What Is Wrong about Recommendation System" /><published>2020-08-02T00:00:00-04:00</published><updated>2020-08-02T00:00:00-04:00</updated><id>https://www.binwang.me/What-Is-Wrong-abount-Recommendation-System</id><content type="html" xml:base="https://www.binwang.me/2020-08-02-What-Is-Wrong-abount-Recommendation-System.html">&lt;p&gt;I remember when I was in high school, the courses were so boring that I was always trying to find some other things to read on class. It was very hard because smart phones were very expensive. And we don’t even have a good library in our city. But just more than 10 years later, it’s a totally different world. The information is so easy to get and so overwhelming that people can easily get lost. So I’m trying to use mobile phone and social network platforms less often since 2 years ago. Recently, I feel I’ve made some progress. I want to share some of my experience by writing a series of articles (hopefully :)). This time, I want to talk about one of the reasons that I want to involve less with the digital world: the recommendation system.&lt;/p&gt;

&lt;p&gt;When I started my software engineer job as an intern, I worked on a recommendation system. At first, I was so fascinated that the computer can learn people’s interest and recommend things for them. It’s a kind of machine learning system. The way it works is you define a goal and let the program to reach it. That’s also how you evaluate whether the recommendation system is good enough. Usually the goal is to find the content that user will click. There are good reasons to choose such a goal: For ads platform, a click on an ads means money from advertisers. For social network platform, a click means user is spending more time on the platform. For retailer website, a click means the user is more likely to buy one more item. Basically, for a commercial company, the goal is how it can earn more money from you.&lt;/p&gt;

&lt;p&gt;In my case, I was also training the system to filter out content that users most likely to click. But after I trained the system, I found it recommended lots of erotic contents. That’s when I realized something is wrong. Logically, the program is right: users are likely to click on the erotic content. That’s when I felt something bad may happen if we rely purely on algorithms.&lt;/p&gt;

&lt;p&gt;Not long after that, my worry became true. Recommendation systems became more popular and more powerful. Companies are founded based on the idea of recommendation algorithms. The most successful one is ByteDance, the company behind Tiktok. It created an app called &lt;em&gt;Jin Ri Tou Tiao&lt;/em&gt; (which means &lt;em&gt;Today’s Headlines&lt;/em&gt; in English) to recommend news based on algorithm. The news are usually low quality, often has erotic content, exaggerated title and partial fact. It’s not good news, but combined with its aggressive notification system, people just cannot stop reading them.&lt;/p&gt;

&lt;p&gt;The reason behind this is a simple fact: what the brain wants may not be what the body really needs. Human beings have evolved for a long time to fit the environment, but the environment has changed so much and so fast in recent years because of the technology, and our brain just cannot catch up. That’s why overweight is so normal in developed countries: it makes sense to eat food that has high calorie at old days when food was not guaranteed. The brain never had a chance to evolve in an environment that calorie is more than needed. Another extreme example is the drug: it’s very bad for healthy but it’s so hard to get rid of it once you are addicted.&lt;/p&gt;

&lt;p&gt;Maybe recommendation system is better than drug, but it’s definitely worse than high-calorie food. It uses power of computer and the information collected from you. It’s brain hacking with modern technology. Not only our body hasn’t evolved to fit it, our society is also falling behind. There is no regulation about that. It’s basically wild west. The companies are doing whatever they want in this field to meet their interests.&lt;/p&gt;

&lt;p&gt;Indeed, as human beings, the brain has higher function that can sometimes recognize what’s bad even it looks temping at first. But that function needs lots of energy and focus, it’s nearly impossible to recognize all of them if you get the information all day. And the energy and focus has limit. Once you spent too much energy to resist the temping recommended content, the less energy you have for real important tasks.&lt;/p&gt;

&lt;p&gt;After you addicted to the recommended contents, the best case is you will waste a lot of time. You may also feel anxiety because watching the contents doesn’t really fulfill your needs. The more anxiety you are, the harder to stop. And worst case, you may get manipulated by other people. Cambridge Analytica is a very good example.&lt;/p&gt;

&lt;p&gt;That’s why I’m very alert to black-box recommendation systems. And that’s why I was very disappointed when Twitter order the timeline based on recommendation. I also had bad time when watching recommended videos and news endlessly that even lost sleep. The solution is simple: just leave them. It’s easy to say but very hard to do. I’ll share some of my tactics in the future.&lt;/p&gt;</content><author><name></name></author><category term="technology" /><category term="RSS" /><summary type="html">I remember when I was in high school, the courses were so boring that I was always trying to find some other things to read on class. It was very hard because smart phones were very expensive. And we don’t even have a good library in our city. But just more than 10 years later, it’s a totally different world. The information is so easy to get and so overwhelming that people can easily get lost. So I’m trying to use mobile phone and social network platforms less often since 2 years ago. Recently, I feel I’ve made some progress. I want to share some of my experience by writing a series of articles (hopefully :)). This time, I want to talk about one of the reasons that I want to involve less with the digital world: the recommendation system.</summary></entry><entry><title type="html">Move from Twitter to Mastodon</title><link href="https://www.binwang.me/2020-07-26-Move-from-Twitter-to-Mastodon.html" rel="alternate" type="text/html" title="Move from Twitter to Mastodon" /><published>2020-07-26T00:00:00-04:00</published><updated>2020-07-26T00:00:00-04:00</updated><id>https://www.binwang.me/Move-from-Twitter-to-Mastodon</id><content type="html" xml:base="https://www.binwang.me/2020-07-26-Move-from-Twitter-to-Mastodon.html">&lt;p&gt;I’m very happy to announce that I moved to &lt;a href=&quot;https://mastodon.binwang.me/@wangbin&quot;&gt;Mastodon&lt;/a&gt; from Twitter.&lt;/p&gt;

&lt;h2 id=&quot;whats-mastodon&quot;&gt;What’s Mastodon?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://joinmastodon.org/&quot;&gt;Mastodon&lt;/a&gt; is a distributed version of Twitter. Anyone can host their own instance of Mastodon and still be able to follow and communicate with users on other instances. Think about Email: no company owns Email. Instead, there are lots of companies provide Email service. They are built on the same protocol, so the users on different providers can communicate with each other.&lt;/p&gt;

&lt;h2 id=&quot;why-mastodon&quot;&gt;Why Mastodon?&lt;/h2&gt;

&lt;p&gt;Mastodon is decentralized by design and open sourced. So I can host my own instance. This means I can actually own &lt;strong&gt;my&lt;/strong&gt; data. This is very important: you don’t know when the platform has a new policy that will delete your posts. That actually happened to me before: There is a Chinese version of Twitter called &lt;a href=&quot;weibo.com/&quot;&gt;Weibo&lt;/a&gt;. Twitter is not available in China because GFW, so a lot of Chinese are using Weibo, which include me, a very early user of Weibo. I wrote a lot of things on Weibo: my ideas, my life and some poems. But after I shared an AI project, the whole account was deleted without notice. They don’t even provide the reason or respond to my question. I only get some information from my friend who was working at Sina (the company behind Weibo), that it’s because of some people are using the project to generate some political related stuffs. I was shocked and disappointed. I lost all my data on Weibo: the posts, the people I followed and the direct messages. Though Twitter is much better because it’s not influenced by a dictator government, it also has it’s own policy. I’m also afraid if my principle is conflicted with its policy. After all, what’s the point of thinking if you cannot think freely.&lt;/p&gt;

&lt;p&gt;Another advantage of an open source project is, the users are always the first. Because if it’s not, other people (including myself!) will fork it, and users will select what meets their needs best. It happened many times: OpenOffice to LibreOffice, OwnCloud to NextCloud, MySQl to MariaDB, and so on. Even sometimes the original project is still the most popular one, people will still create other ones that are popular among specific groups. Such as Gnome 3 and Cinnamon. The reason behind this is it’s much easier to create competitors. So while some people think open source is communism, I think it’s more like capitalism in the sense of free market. Back to the case of Twitter, Twitter really pissed me off because of it sends recommendation to my notification without the option to turn it off. And because of it changes the timeline order to hot Tweets randomly. Twitter is doing this only on its own interest, and people cannot leave because of it’s monopoly. But we have another choice now, which almost impossible to be monopoly. So why not move to the new one?&lt;/p&gt;

&lt;h2 id=&quot;how-do-i-use-mastodon&quot;&gt;How do I use Mastodon?&lt;/h2&gt;

&lt;p&gt;As I said before, I host my own instance of Mastodon. It’s running on my own computer and my home’s network bandwidth is more than enough for this usage. So it basically has no cost. The instance will mainly used by myself. Other people can still register on this instance but it needs my approval to active the account.&lt;/p&gt;

&lt;p&gt;The use case will be exactly the same as Twitter. It will definitely has less audiences than Twitter, but I don’t care that. Frankly, I actually like less audience because it’s easier to share crazy ideas. I also embedded the posts into my blog’s &lt;a href=&quot;/snippets&quot;&gt;Snippets page&lt;/a&gt;. I wanted to post some short random thoughts and ideas to my Blog long time ago, but didn’t do it because it’s hard to make the post feature mobile phone available. I don’t like embedding Twitter. But I’m happy to do it with Mastodon because I have fully control. I tried to find a promising html widget but failed. So I wrote some Javascript with Mastodon API to do it. It’s really simple and surprisingly looks well because of the consistent look with other parts of my Blog. It has less than 100 lines of pure Javascript code. You can find the &lt;a href=&quot;https://github.com/wb14123/blog/blob/master/jekyll/snippets.html&quot;&gt;source code at my Github&lt;/a&gt;. I also migrated all my Twitter posts to Mastodon with the publish date. You can also find the &lt;a href=&quot;https://github.com/wb14123/twitter2mastodon&quot;&gt;tool on my Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At last, this doesn’t mean I will totally abandon Twitter. I will still follow some people on Twitter. But maybe not with Twitter itself but with RSS. I will also post something on Twitter if I want broader audiences, e.g. the updates of my blog.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;I really like the decentralized Internet. That’s why I keep my own blog and don’t want to write articles on third-party platforms. But the monopoly of big companies are making the decentralized Internet dying. Not only data is controlled by these big companies, the privacy is also threatened.&lt;/p&gt;

&lt;p&gt;I’m happy that more and more people are realizing this. And there are more and more people are writing software for decentralized Internet. Other than the Blog, I also host my own file sharing service with NextCloud and instant message service with &lt;a href=&quot;https://matrix.org/&quot;&gt;Matrix&lt;/a&gt;. And after I spent less time on the centralized platforms, I feel I have more control over my time, and I find more interesting people and inspiring ideas.&lt;/p&gt;

&lt;p&gt;My blog still has an very important part that’s controlled by other company: the comment. It’s powered by Disqus. I’ve lost some comments when I made some changes for my blog. And it also requires login to comment. So I have plan to replace it. I’m still trying to find a good alternative for this.&lt;/p&gt;</content><author><name></name></author><category term="social network" /><category term="Twitter" /><category term="Mastodon" /><category term="technology" /><summary type="html">I’m very happy to announce that I moved to Mastodon from Twitter.</summary></entry><entry><title type="html">The Tragic Talented Programmer</title><link href="https://www.binwang.me/2020-07-21-The-Tragic-Talented-Programmer.html" rel="alternate" type="text/html" title="The Tragic Talented Programmer" /><published>2020-07-21T00:00:00-04:00</published><updated>2020-07-21T00:00:00-04:00</updated><id>https://www.binwang.me/The-Tragic-Talented-Programmer</id><content type="html" xml:base="https://www.binwang.me/2020-07-21-The-Tragic-Talented-Programmer.html">&lt;blockquote&gt;
  &lt;p&gt;I’m king Terry…&lt;/p&gt;

  &lt;p&gt;It’s good to be a king.&lt;/p&gt;

  &lt;p&gt;Maybe, maybe I’m just a bizarre little person who walks back and forth.&lt;/p&gt;

  &lt;p&gt;– &lt;a href=&quot;https://www.youtube.com/watch?v=oH41gGBVpkE&quot;&gt;Terry A. Davis&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recently I watched &lt;a href=&quot;https://youtu.be/LtlyeDAJR7A&quot;&gt;a video&lt;/a&gt; from Linus Tech Tips that introduces Temple OS. I’ve heard of Temple OS (maybe on Hacker News) before. But I didn’t really get it when I looked at its official website. However, it really interests me this time. So I looked at more resources, especially another video called &lt;a href=&quot;https://youtu.be/UCgoxQCf5Jg&quot;&gt;TempleOS | Down the Rabbit Hole&lt;/a&gt; which is mentioned by Linus. This time, I known the full story about the person behind Temple OS, Terry A. Davis.&lt;/p&gt;

&lt;p&gt;Temple OS is written by Terry himself. He even created a language for the OS called HolyC, and wrote the compiler by himself. However, the UI of Temple OS is so unusual that the posts by Terry that promote Temple OS either got ignored or considered as spam. And the most important, Terry had schizophrenia. His posts are often out of topic. He believed CIA is after him. And he believed he can talk with God through some random generator. That’s one of the reason he renamed the OS to Temple OS and refer it as God’s third temple. Later on, he published videos and streamed at YouTube. This time he attracted some people’s attention. But unfortunately, some people harassed him by calling his personal phone and sending trolling Emails. I think that’s one of the reasons his schizophrenia get worse. At last, he was kicked out from his home by his parents, and became a homeless. After that, he still &lt;a href=&quot;https://www.youtube.com/watch?v=DBGgi5Lqn0U&quot;&gt;wrote code in the van&lt;/a&gt;. Then he got arrested and also lost his van. He wandered to Portland at last. And finally dead at 2018 because of hitting by a train.&lt;/p&gt;

&lt;p&gt;I feel so sad about this story. I downloaded Temple OS and played with it for a while. Under it’s unusual GUI, I was shocked by the OS. It’s complete, and it’s different. The whole shell is just a console of HolyC. You run the command the same way as you write the code. You can search and navigate to the source very easily. You can modify anything in the OS. And it even has fairly powerful graphic system. It’s so new and so fun to me. I cannot believe it’s all written by one person. That says how talented Terry was. I also watched some videos about he talked about HolyC, which has a lot of inspiring ideas.&lt;/p&gt;

&lt;p&gt;The more I watched his videos, the more I felt empathy with him. I know a lot of people in Chinese history that are very talented but are not recognized by the sociality at the time they were living. There are a lot of poems about that. And I also had hard times personally. So I can really feel it. In Terry’s case, it’s even more tragic because of the mental illness.&lt;/p&gt;

&lt;p&gt;I have been in Portland for a short period of time at 2018. Portland has highest number of homeless people in the US. And there are also a lot of homeless in Toronto. I don’t know the sociality in the north America so I usually feel uncomfortable around the homeless. Now I know not all of them are drug users. At least some of them are worth respected.&lt;/p&gt;

&lt;p&gt;Luckily, Terry left a lot of videos behind him that recorded his thoughts and ideas. And most important, he left his epic work: the God’s third temple - Temple OS. A lot of people remember him, miss him and respect him because of this. In this sense, he is not really dead. I really get inspired by him. I’m also trying to left ideas and work behind me. After all, that’s the meaning of life.&lt;/p&gt;</content><author><name></name></author><category term="thoughts" /><category term="Temple OS" /><category term="programming" /><category term="technology" /><summary type="html">I’m king Terry… It’s good to be a king. Maybe, maybe I’m just a bizarre little person who walks back and forth. – Terry A. Davis</summary></entry><entry><title type="html">Powerful Type System</title><link href="https://www.binwang.me/2020-07-11-Powerful-Type-System.html" rel="alternate" type="text/html" title="Powerful Type System" /><published>2020-07-11T00:00:00-04:00</published><updated>2020-07-11T00:00:00-04:00</updated><id>https://www.binwang.me/Powerful-Type-System</id><content type="html" xml:base="https://www.binwang.me/2020-07-11-Powerful-Type-System.html">&lt;p&gt;This is not an article to introduce type systems. It’s only some of my experience and thoughts about it.&lt;/p&gt;

&lt;h2 id=&quot;basic-type-system&quot;&gt;Basic Type System&lt;/h2&gt;

&lt;p&gt;When I first learned programming, I was very interested in languages with dynamic type system like Javascript and Python. It seems so straight forward. The need of annotate types on variables and methods seems so annoying.&lt;/p&gt;

&lt;p&gt;But as I wrote more programs, the more I feel the power of type system. Basically there are some reasons why type system is useful:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It serves as document. So when you read the code which is wrote by other people (or by yourself a long time ago), you can understand the methods and objects more easily.&lt;/li&gt;
  &lt;li&gt;It can prevent some basic errors. For example, some code change the type of variables on the fly and you don’t know about it. Or you accidentally assign a wrong type of value to it. Or just a typo in the field name. The type system can find a lot of these errors at compile time.&lt;/li&gt;
  &lt;li&gt;The tools can be powerful with type system. With type system, it’s so pleasant to write code with modern IDEs. The IDE can complete the field names for you. It can jump to the definitions of the methods or objects very easily. It can show all the usages of the methods. I’m not saying it cannot be done with dynamic type system, it’s just more difficult and inefficient. For example, when I open Intellij with a reasonable large Javascript project, the fans will run like crazy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All these advantages are well known by most programmers now. And it’s a trend to use type system more often. For example, Python already added the type hint so you can optional write type annotations and use some tools to check the code. So I will not go any deeper about the basic type system.&lt;/p&gt;

&lt;h2 id=&quot;dependent-type-system&quot;&gt;Dependent Type System&lt;/h2&gt;

&lt;p&gt;I was missing type system so much when I wrote machine learning program with TensorFlow. With TensorFlow, you need to construct the computing graph with some awful API (it’s before the eager execution mode), so it’s very easy to get lost what’s the type and shape of the current tensor. Though TensorFlow can actually check the correctness of shape when construct the graph, but the error message doesn’t help a lot if it has dynamic shapes. It will only report the shape as &lt;code&gt;?&lt;/code&gt;. So the error messages are like “&lt;code&gt;?&lt;/code&gt; doesn’t match”, but you don’t know exactly where is &lt;code&gt;?&lt;/code&gt; in the shapes come from.&lt;/p&gt;

&lt;p&gt;So at that time, I thought it would be so nice if I can annotate the shape of the tensors just like the type system. So I can know every tensor’s shape when I’m writing the code. The API will also has the more information by default. For example, imagine if we can write the code like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;reverseImage&lt;/span&gt;(images: Tensor[BatchSize, ImageHeight, ImageWidth]): Tensor[BatchSize, ImageWidth, ImageHeight]:
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;pass&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;So that we know the what’s the meaning of each of the demission. And if we operate on the return value, we can keep track on the properties like &lt;code&gt;BatchSize&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But after a deeper thinking, the type system I knew at that time cannot actually handle the information like shapes. Because the shape of the tensor is dynamic and could be infinity. It’s impossible to define a type like &lt;code&gt;BatchSize&lt;/code&gt;, it’s more like a variable.&lt;/p&gt;

&lt;p&gt;That was the time I found dependent type system. More specifically, I found a language that has dependent type system called &lt;a href=&quot;https://www.idris-lang.org/&quot;&gt;Idris&lt;/a&gt;. Here is an example of how it works from &lt;a href=&quot;https://www.idris-lang.org/pages/example.html&quot;&gt;its official website&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-idris highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;app : Vect n a -&amp;gt; Vect m a -&amp;gt; Vect (n + m) a
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;app Nil       ys = ys
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;app (x :: xs) ys = x :: app xs ys
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The syntax is a little like Haskell, but you get the idea: &lt;code&gt;Vect&lt;/code&gt; is a type that can have it’s own properties. And the return type’s property can based on the parameter’s type: &lt;code&gt;n+m&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;formal-proof&quot;&gt;Formal Proof&lt;/h2&gt;

&lt;p&gt;Such a powerful type system exists surprised me. Even more, Idris introduces how it can proof theorem. Normally, we will write tests for methods. But there is almost no guarantee the methods will work correctly for all cases. For example, if we write a method &lt;code&gt;plus(a:int, b:int)&lt;/code&gt;, and we want to test if &lt;code&gt;plus(a, b) == plus(b, a)&lt;/code&gt;. In most languages, we will only find some values for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to see the result. And hopefully we can find some edge cases. But with Idirs, you can actually define a theorem to declare &lt;code&gt;plus(a, b) == plus(b, a)&lt;/code&gt;, and prove it with the code. If you don’t prove it the right way, the compilation will fail. This ability really opens a new world to me.&lt;/p&gt;

&lt;p&gt;I find this ability can be very useful in machine learning. Because machine learning involves a lot of math. The model often needs to have some properties to make it work right. For example, maybe you need the function to be differentiable. To write down these theorem and prove it, makes it have the same advantages as type system: a much better documentation and make sure the program is working as intended.&lt;/p&gt;

&lt;p&gt;As I explored the formal proof, I find it has a much wider use case than I though. For example, I found &lt;a href=&quot;https://github.com/uwplse/verdi/pull/16&quot;&gt;Raft has a formal proof&lt;/a&gt;. The thing I like about programming is I can always find how it works if I spent enough time: it’s all in the code and can only be interpreted in one way. It would be so much fun if a complex theorem in distributed system can be proved in such a way: I can learn the theorem step by step and make sure I understand them correct.&lt;/p&gt;

&lt;p&gt;Even though I discovered all these information 2 years ago. Only until recently I have some time to actually learn some formal proof language. There is a very good series of books called &lt;a href=&quot;https://softwarefoundations.cis.upenn.edu/&quot;&gt;Software Foundations&lt;/a&gt;, which introduces Coq, a very popular language to prove theorems. It has many exercises in the book’s source code so I can read and modify the code to do exercises. It’s really a fun experience. A lot of the concepts are not found in popular languages so it’s refreshing and challenging. I’m tracking the progress in &lt;a href=&quot;https://softwarefoundations.cis.upenn.edu/&quot;&gt;a Git repo&lt;/a&gt; and wish I can finish them all.&lt;/p&gt;</content><author><name></name></author><category term="technology" /><category term="programming language" /><category term="type system" /><category term="machine learning" /><summary type="html">This is not an article to introduce type systems. It’s only some of my experience and thoughts about it.</summary></entry><entry><title type="html">Migrate Arch Linux to ZFS</title><link href="https://www.binwang.me/2020-01-28-Migrate-Arch-Linux-to-Zfs.html" rel="alternate" type="text/html" title="Migrate Arch Linux to ZFS" /><published>2020-01-28T00:00:00-05:00</published><updated>2020-01-28T00:00:00-05:00</updated><id>https://www.binwang.me/Migrate-Arch-Linux-to-Zfs</id><content type="html" xml:base="https://www.binwang.me/2020-01-28-Migrate-Arch-Linux-to-Zfs.html">&lt;p&gt;I migrated my Arch Linux installation to ZFS recently. This article describes why and how I did that.&lt;/p&gt;

&lt;h2 id=&quot;why-zfs&quot;&gt;Why ZFS?&lt;/h2&gt;

&lt;p&gt;ZFS is a very advanced file system that has many handful features. I first knew it many years ago, when I installed FreeNAS for fun. FreeNAS is an OS made for NAS based on FreeBSD. When I played with it, the features of ZFS really shocked me and let me realised what a file system can really do. I will list the features of ZFS that I’m using and not usually avaliable in traditional file systems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Snapshot: It is really easy to take a snapshot. Because ZFS has copy-on-write feature, so a snapshot doesn’t take any space until you change some content on the file system. It makes backup way much cheaper and easier. This is the biggest feature that let me want to migrate to ZFS.&lt;/li&gt;
  &lt;li&gt;RAIDZ: The traditional raid hides the disks from the file system. But for ZFS, you can use raidz which the file system can see the topological of disks so that it can optimize the I/O based on the information.&lt;/li&gt;
  &lt;li&gt;Dataset: You can create many datasets in a zfs pool. Which can have different configurations based on the use case.&lt;/li&gt;
  &lt;li&gt;L2 Cache: You can use hard disk drives as the file system and add SDD as read or write cache. Which is a very good balance between the storage space, speed and the price.&lt;/li&gt;
  &lt;li&gt;Send/Recv: ZFS has commands to send the datasets and snapshots to another dataset or a remote machine. Which makes the offline backup much easier and cheaper.&lt;/li&gt;
  &lt;li&gt;Compression: By compression you can save both storage space and make the read/write faster. And you can set different compression algorithm for different use cases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But back then ZFS is not well supported on Linux so I used ext4. Then I had an internship at Redhat and realised ext4 was really an old file system so I migrated to XFS. Until now, my storage configuration is one 128G SSD for the system (root partition). Two 2TB HDDs as a RAID1 array to store all the other data. I backup the system from SDD to HDD regularly in case of the SDD fails. And I don’t have any way to protect me from deleting files by mistake.&lt;/p&gt;

&lt;h2 id=&quot;why-not-freebsd&quot;&gt;Why not FreeBSD?&lt;/h2&gt;

&lt;p&gt;It is very nature to use BSD with ZFS since it is supported by deafult. With linux, you must install another kernel module which is not native supported by kernel. And Linus just said “don’t use ZFS” somedays ago. So I was seriously thinking about change my OS to FreeBSD. Compared to Arch Linux, the system is more security because all the packages are native supported by the FreeBSD developer and the port system also has a lot of softwares. But finally something stops me from migrating to FreeBSD:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The game support. Last year, game on Linux finally breaks out because of the Poton on Steam. Though I don’t play games a lot, it’s still a pity to have no game to play.&lt;/li&gt;
  &lt;li&gt;FreeBSD starts using ZFS on Linux as the upstream of ZFS. So with the bigger community, ZFS on Linux may has better support and more features in the future.&lt;/li&gt;
  &lt;li&gt;It’s a risk to migrate to a new system. Arch Linux works great for me for a long time. If the new installation doesn’t work, it’s time consuming to recover the system. And it says FreeBSD doesn’t have a good support on Nvidia graphic card, which I’m currently using.&lt;/li&gt;
  &lt;li&gt;FreeBSD’s Jails are much mature than Containers on Linux. And I really hate Docker for its deamon running as root. Docker also has bad community reputation (e.g. changing its community version’s name). Rkt from Core OS is much better but both Core OS and Rkt are dead after the acquire of Redhat. But finally I found Podman. So I can compromise at this point. Containers also has bigger community. For example, the Nextcloud I’m using has official image so I don’t need to build my own one.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-migrate-to-zfs&quot;&gt;How to Migrate to ZFS?&lt;/h2&gt;

&lt;h3 id=&quot;1-backup-the-data&quot;&gt;1. Backup the Data&lt;/h3&gt;

&lt;p&gt;My disks and partitions are like this before the migration:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;- SDD
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;  + / (root)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;  + /boot
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;- RAID1 (hdd1, hdd2)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;  + /data
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I only backup my data disks because I will not use my system disk for the ZFS pool at the creation time. I will use it as cache which can be added later. An important note is to &lt;strong&gt;use &lt;code&gt;tar&lt;/code&gt; or &lt;code&gt;rsync&lt;/code&gt; to backup data&lt;/strong&gt;. Don’t use &lt;code&gt;cp&lt;/code&gt;, it will break the file permissions and links.&lt;/p&gt;

&lt;h3 id=&quot;2-install-zfs-kernel-modules-and-utils&quot;&gt;2. Install ZFS Kernel Modules and Utils&lt;/h3&gt;

&lt;p&gt;Follow the &lt;a href=&quot;https://wiki.archlinux.org/index.php/ZFS#Installation&quot;&gt;Arch Linux’s ZFS wiki&lt;/a&gt; to do that. I also enabled the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Unofficial_user_repositories#archzfs&quot;&gt;ArchZFS repo&lt;/a&gt; so I don’t need to build it from AUR. This repo is signed so it is more secure.&lt;/p&gt;

&lt;h3 id=&quot;3-create-zfs-pool-and-dataset&quot;&gt;3. Create ZFS Pool and Dataset&lt;/h3&gt;

&lt;p&gt;I added another HDD for the ZFS pool in order to make a raidz1 pool (like raid5), which doubles the current storage space with raid1. Then create a dataset for the new root partition. The dataset has native encryption and compression enabled.&lt;/p&gt;

&lt;h3 id=&quot;4-mount-the-root-dataset-and-copy-the-root-partition&quot;&gt;4. Mount the Root Dataset and Copy the Root Partition&lt;/h3&gt;

&lt;p&gt;Temparory mount the root dataset to &lt;code&gt;/mnt&lt;/code&gt;. Then follow the Arch Linux wiki about &lt;a href=&quot;https://wiki.archlinux.org/index.php/Install_Arch_Linux_from_existing_Linux#From_a_host_running_Arch_Linux&quot;&gt;installing from a host running Arch Linux&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;5-make-new-boot-image-and-config-bootloader&quot;&gt;5. Make New Boot Image and Config Bootloader&lt;/h3&gt;

&lt;p&gt;I was trying to install boot partition into the ZFS but failed after many attemps. At last I decide just use the old boot partition and sync them to ZFS as backup.&lt;/p&gt;

&lt;p&gt;So follow &lt;a href=&quot;https://wiki.archlinux.org/index.php/Install_Arch_Linux_on_ZFS&quot;&gt;install Arch Linux on ZFS wiki&lt;/a&gt;. After the regular installation, add &lt;code&gt;zfs&lt;/code&gt; in &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt; &lt;code&gt;HOOKS&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;HOOKS=(base udev autodetect modconf block keyboard zfs filesystems)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Then using &lt;code&gt;mkinitcpio -p&lt;/code&gt; to make new boot image. (You may want to backup old images &lt;code&gt;/boot/initramfs-linux.img&lt;/code&gt; and &lt;code&gt;/boot/vmlinuz-linux&lt;/code&gt; before this step).&lt;/p&gt;

&lt;p&gt;Then in &lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt;, change the root filesystem to zfs, like this (in the menuentry):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;linux   /vmlinuz-linux root=ZFS=zroot/root rw  loglevel=3 quiet
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Which &lt;code&gt;zroot/root&lt;/code&gt; is the root dataset.&lt;/p&gt;

&lt;h3 id=&quot;6-config-mount-points&quot;&gt;6. Config Mount Points&lt;/h3&gt;

&lt;p&gt;Reconfig the root dataset’s mount point to &lt;code&gt;/&lt;/code&gt; and add the configuration in &lt;code&gt;/etc/fstab&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;zroot/root / zfs defaults,noatime 0 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Don’t forget to set the auto import:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;systemctl enable zfs-import-cache
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;zpool set cachefile=/etc/zfs/zpool.cache &amp;lt;pool&amp;gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;systemctl enable zfs-mount
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;systemctl enable zfs.target
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Also need to input the passphrase if using encryption. Follow the &lt;a href=&quot;https://wiki.archlinux.org/index.php/ZFS&quot;&gt;Arch Linux’s ZFS wiki&lt;/a&gt; to do that.&lt;/p&gt;

&lt;h3 id=&quot;7-restart-and-config-new-system&quot;&gt;7. Restart and Config New System&lt;/h3&gt;

&lt;p&gt;After the reboot, the system should boot into the new root. Then cleanup the old root partition and add it as the cache of the pool: &lt;code&gt;zpool add -f zroot cache &amp;lt;partition-uuid&amp;gt;&lt;/code&gt;. Then create other datasets and move back all the old data.&lt;/p&gt;

&lt;p&gt;Now I can make different datasets for different purpose. For example, make a dataset for nextcloud container’s storage. Make a highly compressed dataset for backup files from other machine, and so on.&lt;/p&gt;

&lt;p&gt;After the migration, the first boot is slower than before because the root system is migrated to HDD. But the most useful files will be cached into SSD and it feels the same as before after a while. Now I’m very happy with the current setup and super excited about all the advanced features of ZFS! Happy hacking!&lt;/p&gt;</content><author><name></name></author><category term="linux" /><category term="zfs" /><category term="technology" /><category term="freebsd" /><summary type="html">I migrated my Arch Linux installation to ZFS recently. This article describes why and how I did that.</summary></entry><entry><title type="html">Great Resources for Learning Database and Distributed System</title><link href="https://www.binwang.me/2019-11-04-Great-Resources-for-Learning-Database-and-Distributed-System.html" rel="alternate" type="text/html" title="Great Resources for Learning Database and Distributed System" /><published>2019-11-04T00:00:00-05:00</published><updated>2019-11-04T00:00:00-05:00</updated><id>https://www.binwang.me/Great-Resources-for-Learning-Database-and-Distributed-System</id><content type="html" xml:base="https://www.binwang.me/2019-11-04-Great-Resources-for-Learning-Database-and-Distributed-System.html">&lt;p&gt;There has been a long time since the last update of my blog. This has been a crazy year. I’ve prepared for a big change in my life in most time of the year. I may write a blog about that in a few days. In this article, I’d like to write something about my work these years: database, big data and distributed system.&lt;/p&gt;

&lt;p&gt;I’ve been working on data analysis for about 5 years. And at my last company, we processed many big companies’ data. At the current company, we are building a distributed database aims to be good at both OLTP and OLAP jobs, with SQL and transaction support. So I learned a lot these years and it is extremely interesting. I have thought about sharing them a lot of times before. But a principle of my blog is sharing new things that can inspire people, even it is small, instead of repeating old things. Unfortunately, I haven’t have many original ideas or works to share about. However, when I look back, I find when I was learning and working, the resource is not very easy to find. So in this blog, I’ll list some resources that helped me a lot, and I think will help everyone that wants to get familiar with database and distributed system.&lt;/p&gt;

&lt;h2 id=&quot;the-book-designing-data-intensive-applications&quot;&gt;The Book: &lt;a href=&quot;https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable-ebook/dp/B06XPJML5D&quot;&gt;Designing Data-Intensive Applications&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is a book that explains many daily used ideas and practises about database and distributed system. It clarified some confused terms and makes some complex algorithms quite understandable. This book is published at 2017, so it is pretty up to date. Maybe the author doesn’t give a deep exploration for every topic, but it is enough to build a solid foundation for the reader to do future study and research. Other than only introduce the things that already exists, the author also gives some new ideas about how the data can be stored and processed. Though I’m not totally agree with his idea, it is still very insightful. And at the last chapter, the author talks about the data privacy and how can we improve it as an engineer. Which I cannot agree more. I’m very respectful for speaking it out loud in an engineer book.&lt;/p&gt;

&lt;h2 id=&quot;the-course-cmu-database-courses&quot;&gt;The Course: CMU Database Courses&lt;/h2&gt;

&lt;p&gt;There are two courses: the &lt;a href=&quot;https://15445.courses.cs.cmu.edu/fall2019/&quot;&gt;basic one&lt;/a&gt; and the &lt;a href=&quot;https://15721.courses.cs.cmu.edu/spring2019/&quot;&gt;advanced one&lt;/a&gt;. The courses provide a very solid introduction to the important ideas and theories of database. For example, the implementation of transaction and optimizer, which is not covered in the previous book. It has reading materials and videos, all available online. You can pick the topics you are interested in, so that it will not take much time. And it is updated every year so some new researches and information are included.&lt;/p&gt;

&lt;h2 id=&quot;the-tool-jepsen&quot;&gt;The Tool: &lt;a href=&quot;https://jepsen.io/&quot;&gt;Jepsen&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;After reading the book and watching the course, you can at least know some claims from the database company are just fancy words. For example, some database claims to support transaction, but at what isolation level? Some database claims to support multiple nodes, but what’s the consistency level? What about the availability? Even though they describe them in details, how do you know the product is the same as the document claims. And if you are implementing a database, which is very hard, how can you be confidence that you are doing it right. Here comes the awesome tool: Jepsen. It is a tool can simulate concurrent queries to database, and introduce errors like network partition, clock drift and node failure. Then it compares the results to see if it is the same as expected. Actually I’ve used this tool to find some transaction bugs in our database.&lt;/p&gt;

&lt;p&gt;The author of Jepsen has analysed many databases and write the &lt;a href=&quot;https://jepsen.io/analyses&quot;&gt;reports&lt;/a&gt; of them. I highly recommend to read these reports. You can see what can go wrong in the real world and how to find them. And what the database company claims and what really it is.&lt;/p&gt;

&lt;p&gt;There is also an &lt;a href=&quot;https://github.com/aphyr/distsys-class&quot;&gt;outline for the distributed system training&lt;/a&gt;, which I think is great to see if there is any knowledge you are still not familiar with and then study by yourself.&lt;/p&gt;

&lt;h2 id=&quot;the-blog-dbms-musings&quot;&gt;The Blog: &lt;a href=&quot;https://dbmsmusings.blogspot.com/&quot;&gt;DBMS Musings&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This is a blog by Daniel Abadi, a database researcher at University of Maryland, College Park. He explains some easy to confuse terms and some trending topics about database. The only fallback of the blog maybe the color of the webpage. The red background is very unfriendly to the eyes. You may want to read the blog in an RSS reader.&lt;/p&gt;</content><author><name></name></author><category term="database" /><category term="distributed system" /><summary type="html">There has been a long time since the last update of my blog. This has been a crazy year. I’ve prepared for a big change in my life in most time of the year. I may write a blog about that in a few days. In this article, I’d like to write something about my work these years: database, big data and distributed system.</summary></entry><entry xml:lang="zh"><title type="html">由“废青”这个称呼所想到的</title><link href="https://www.binwang.me/2019-08-15-%E7%94%B1-%E5%BA%9F%E9%9D%92-%E8%BF%99%E4%B8%AA%E7%A7%B0%E5%91%BC%E6%89%80%E6%83%B3%E5%88%B0%E7%9A%84.html" rel="alternate" type="text/html" title="由“废青”这个称呼所想到的" /><published>2019-08-15T00:00:00-04:00</published><updated>2019-08-15T00:00:00-04:00</updated><id>https://www.binwang.me/%E7%94%B1%E2%80%9C%E5%BA%9F%E9%9D%92%E2%80%9D%E8%BF%99%E4%B8%AA%E7%A7%B0%E5%91%BC%E6%89%80%E6%83%B3%E5%88%B0%E7%9A%84</id><content type="html" xml:base="https://www.binwang.me/2019-08-15-%E7%94%B1-%E5%BA%9F%E9%9D%92-%E8%BF%99%E4%B8%AA%E7%A7%B0%E5%91%BC%E6%89%80%E6%83%B3%E5%88%B0%E7%9A%84.html">&lt;p&gt;最近一直都在关注香港的事情，无奈水平和精力有限，对于各种事实尚不能核实清楚，更不用说大局上有什么高见了。所以只是想在一个小事上说一些自己的看法。&lt;/p&gt;

&lt;p&gt;最近在各种社交网络上，对于香港青年的一个称呼，“废青”，很是困扰我。这才意识到，不知从什么时候开始，在网络上很多人养成了给人贴标签的习惯。我最近读了一本书名叫 Behave，其中一些地方感觉对这个问题还是挺有启发的，在此给大家分享一下。&lt;/p&gt;

&lt;p&gt;书中说道，从生物学上讲，人类天生就有分辨“我们”和“他们”的本能。对于“我们”，会更加认同，更加有可能出手帮助；而对于“他们”，则会更容易激起厌恶、排斥、恐惧或愤怒等感情。这一切都是在大脑皮质受到激活前，由杏仁核等部位决定的。这意味着当你还没有意识到的时候这种潜意识就已经产生了。书中列举了很多例子，比如当实验者看到别的种族的照片时，杏仁核(主要与比较原始的情感去恐惧和愤怒相关)受到的激活会更加强烈。由于例子太多，在此不能一一列举，总而言之，这是人类进化到现在的一种本能的行为和功能。这种行为无所谓好坏，但是要看在什么环境下。比如人喜欢吃高热量的食物，这在原始时代可以帮助人类生存下来，在现代却因为摄入过量热量而造成了很多疾病。同样，区分“我们”和“他们”的本能在古代可以帮助一个部落提高凝聚力，抵抗其他部落，但是到了现代这样一个全球合作的年代，带来的恐怕大部分是负面的作用。&lt;/p&gt;

&lt;p&gt;那是否有方法强化或者弱化这种本能呢？答案是肯定的。首先说强化这种本能的方法，那就是把“他们”和让人感觉到厌恶的东西联系起来，尽量把“他们”给非人化，并且描述成一个整体而不是一个个的个体。比如用老鼠、蟑螂称呼这些人。书中也列举了很多实验，我因为记忆有限也不能一一列举，希望我这篇文章能抛砖引玉让更多人去看看原书。但是有一个现实中的例子值得一提，那就是卢旺达大屠杀：在1994年，100天内，卢旺达700万人口中的50万到100万被屠杀。很多屠杀都只是用到了棍棒、砍刀等原始武器。由此可以想象得到屠杀的残酷。这么残酷的事情何以会发生呢？杀人的人真的是泯灭了人性吗？原因之一就是一些胡图人在广播中把这些人描述成蟑螂，所以要像消灭蟑螂一样把他们消灭掉。&lt;/p&gt;

&lt;p&gt;以史为鉴，不看太远的，就看国内的文革，不也是用各种概念人为的分出各种群体吗？所以当现在看到“废青”这个称呼，以及这个称呼所激起到的厌恶和排斥，不免让人感到危险。使用这种称呼，不论是有意还是无意，都让人在理性判断之前先有了一种先入为主的情绪。在香港事件的这个阶段，理性分析尚不一定能够得到好的结果，激起排斥的情绪更会于事无益。我也知道国内的很多舆论都反对港独，所以如果你持这种观点，就更不要用贴标签这种行为来强化区分“我们”和“他们”的这种本能。&lt;/p&gt;

&lt;p&gt;那如何能弱化这种本能？从而避免偏见，让理性主导如此复杂的时间呢？书中也介绍了一些实验，总而言之，多想想“他们”是由单独的个体组成的，不要把“他们”非人化。在香港这一个如此多人的活动中，游行者并非有高度组织，会涉及到各种不同的个体。想想这件事的复杂性，而不是有一个所谓统一意志的“废青”在主导着这个事情。&lt;/p&gt;

&lt;p&gt;所以根据以上这些原因，希望大家以后讨论的时候不要暴力的直接给贴一个让人产生厌恶的标签，包括“废青”，也包括“五毛”、“小粉红”、“美狗”等等，也不要让贴标签这种行为影响你们的判断。可能在墙内因为各种原因，没办法进行太深入的讨论，但是在这样一个言论相对自由的地方，希望可以用理性代替原始的本能。言尽于此，与君共勉！&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：此文首发于 &lt;a href=&quot;https://www.reddit.com/r/China_irl/comments/cql13x/%E7%94%B1%E5%BA%9F%E9%9D%92%E8%BF%99%E4%B8%AA%E7%A7%B0%E5%91%BC%E6%89%80%E6%83%B3%E5%88%B0%E7%9A%84/&quot;&gt;Reddit&lt;/a&gt;，今转载于此。博文发表日期设置于与 Reddit 发表日期相同。&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><category term="politics" /><category term="Hong Kong" /><category term="China" /><category term="biological" /><category term="neurological" /><summary type="html">最近一直都在关注香港的事情，无奈水平和精力有限，对于各种事实尚不能核实清楚，更不用说大局上有什么高见了。所以只是想在一个小事上说一些自己的看法。</summary></entry><entry><title type="html">Root And Optimize MiBox 3S</title><link href="https://www.binwang.me/2018-11-18-Root-And-Optimize-MiBox-3S.html" rel="alternate" type="text/html" title="Root And Optimize MiBox 3S" /><published>2018-11-18T00:00:00-05:00</published><updated>2018-11-18T00:00:00-05:00</updated><id>https://www.binwang.me/Root-And-Optimize-MiBox-3S</id><content type="html" xml:base="https://www.binwang.me/2018-11-18-Root-And-Optimize-MiBox-3S.html">&lt;p&gt;I’ve bought a MiBox 3S to watch TV and video for a long time. These days I’ve done lots of things to security my digital life and privacy, like change my Email to Proton Mail, change the search engine to DuckDuckGo, use Authy to enable 2FA when possible, and so on. So I didn’t turn on the MiBox for a long time since I don’t feel security to let a XiaoMi device running all the time in my LAN. The business model of XiaoMi is to sell cheap device and push ads to you. So it definitely collects your data. But I do need a device to watch TV or video on a big screen, so I decide to root and clean it to make it more security. Here is how I do it:&lt;/p&gt;

&lt;h2 id=&quot;1-preparation&quot;&gt;1. Preparation&lt;/h2&gt;

&lt;h3 id=&quot;11-how-to-recover-the-device&quot;&gt;1.1 How to Recover the Device&lt;/h3&gt;

&lt;p&gt;You need to know how to recover the device if you failed to root it and messed the system up. Just turn off the device, press confirm and back button on the remote control at the same time, then turn on the device. You can find it will enter the recovery mode and has an option to recover to factory settings.&lt;/p&gt;

&lt;h3 id=&quot;12-some-apps-and-scripts&quot;&gt;1.2 Some Apps and Scripts&lt;/h3&gt;

&lt;p&gt;Some apps and scripts are used to grant the root permission. You can follow &lt;a href=&quot;https://www.youtube.com/watch?v=IJ60IZjQbxk&amp;amp;t=748s&quot;&gt;this video&lt;/a&gt; to root the device (but don’t follow the video to install the Google Apps), then come back here from step 3.&lt;/p&gt;

&lt;p&gt;If you don’t want to watch the video, just download the needed folder &lt;a href=&quot;https://yadi.sk/d/wOKiw5RL3EGpKX&quot;&gt;MDZ18AA_1.5.2&lt;/a&gt; and follow this tutorial from step 1.&lt;/p&gt;

&lt;h3 id=&quot;13-how-to-install-apps&quot;&gt;1.3 How to Install Apps&lt;/h3&gt;

&lt;p&gt;You need a USB drive to install the apps. Put the APKs in the USB drive and plug it into MiBox. It will prompt to open it. Then you can install the APK from it. KingRoot, SManager and SuperUser are already bundled in the directory &lt;code&gt;MDZ18AA_1.5.2&lt;/code&gt;. You can download apk of other apps from websites liek APK Mirror or APK Pure.&lt;/p&gt;

&lt;p&gt;The apps used are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;KingRoot: Grant root permission.&lt;/li&gt;
  &lt;li&gt;SManager: Copy files and run scripts.&lt;/li&gt;
  &lt;li&gt;SuperUser: Manage root permission.&lt;/li&gt;
  &lt;li&gt;HALauncher: The third-party launcher.&lt;/li&gt;
  &lt;li&gt;Ice Box: Disable the built-in apps.&lt;/li&gt;
  &lt;li&gt;Greenify: Disable the background running.&lt;/li&gt;
  &lt;li&gt;AFWall+: Disable network access.&lt;/li&gt;
  &lt;li&gt;Smart YouTube: The YouTube client for TV that doesn’t need Google service installed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;14-prepare-a-mouse&quot;&gt;1.4 Prepare a Mouse&lt;/h3&gt;

&lt;p&gt;We must use a mouse to do some operations since many apps are not designed for TV.&lt;/p&gt;

&lt;h2 id=&quot;2-root-the-device&quot;&gt;2. Root the Device&lt;/h2&gt;

&lt;p&gt;Root the device is easy. Just install the app KingRoot and follow the instructors. One thing to notice is after root, KingRoot will ask you to optimize the system. &lt;strong&gt;Don’t do that!&lt;/strong&gt;. Since KingRoot is &lt;a href=&quot;https://forum.xda-developers.com/showthread.php?t=2473747&quot;&gt;found to have bad behaviours&lt;/a&gt;. We will clean it up and use Superuser to replace it.&lt;/p&gt;

&lt;h2 id=&quot;3-cleanup-kingroot-and-install-superuser&quot;&gt;3. Cleanup KingRoot and Install Superuser&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Instal SManager.&lt;/li&gt;
  &lt;li&gt;In SManager, copy the downloaded folder &lt;a href=&quot;https://yadi.sk/d/wOKiw5RL3EGpKX&quot;&gt;MDZ18AA_1.5.2&lt;/a&gt; from USB drive to &lt;code&gt;/storage/sdcard0&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;In SManager, open &lt;code&gt;1_ROOT/SuperSU.sh&lt;/code&gt;, check &lt;code&gt;su&lt;/code&gt; option and run it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-install-a-third-party-launcher&quot;&gt;4. Install A Third-Party Launcher&lt;/h2&gt;

&lt;p&gt;Many people use the original Android TV launcher from Google. I don’t want to do that. Since you must install a lot of Google apps in order to use it (which means is also bloated), and it’s not very convenience to use Google in China. So I decide to install a third-party one. At last I choose &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.i.akihiro.halauncher&quot;&gt;HALauncher&lt;/a&gt;. It is very simple and clean. After some simple configurations, the UI looks very beautiful. Here is a picture of it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2018-11-18-Root-And-Optimize-MiBox-3S/halauncher.jpg&quot; alt=&quot;HALauncher&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, after install HALauncher, we cannot set it to default. In order to use it, we must disable the built-in launcher.&lt;/p&gt;

&lt;h2 id=&quot;5-disable-built-in-apps&quot;&gt;5. Disable Built-in Apps&lt;/h2&gt;

&lt;p&gt;Uninstall built-in apps will get a higher risk since the built-in apps are integrate with the device very deeply, if uninstall the wrong one may make the device unusable. So I uses the app &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.catchingnow.icebox&quot;&gt;Ice Box&lt;/a&gt; to just disable them. After disable the built-in launcher, the system will use the third-party launcher that you installed in the last step.&lt;/p&gt;

&lt;p&gt;One thing that is not very convenience of Ice Box is the operations must be done with a mouse. On the phone, you can add the shortcuts to open the disabled apps, but I didn’t find that option on TV. So I also install &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.oasisfeng.greenify&quot;&gt;Greenify&lt;/a&gt; to make the daily used app not running in the background.&lt;/p&gt;

&lt;p&gt;After disabled the built-in apps, if you want to use the USB drive, you must open the original launcher from XiaoMi as well as the MiSystem app from Ice Box. After mount the USB drive, you can disable them again.&lt;/p&gt;

&lt;h2 id=&quot;6-disable-network-by-default&quot;&gt;6. Disable Network by Default&lt;/h2&gt;

&lt;p&gt;Even we’ve disabled the built-in apps, we cannot ensure the security either. Since XiaoMi may modified the Android OS. So I disabled the network at all with &lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.ukanth.ufirewall&quot;&gt;AFWall+&lt;/a&gt; and only let limited video apps have access to network. So whatever XiaoMi built in the OS cannot upload anything to its server, and it cannot download and upgrade the system, either. (In theory, XiaoMi can also upload things through modify the kernel but I don’t think it will do things like that deep.)&lt;/p&gt;

&lt;h2 id=&quot;7-install-some-video-apps&quot;&gt;7. Install Some Video Apps&lt;/h2&gt;

&lt;p&gt;At this step, the system is clean. You can install your favorite video apps. If you want to watch YouTube, you cannot install the official one since it needs Google service. You can install Smart YouTube instead. I think it is much better than the Google one. After installed the video apps, don’t forget to give them network access in AFWall+ and disable the background behavior in Greenify.&lt;/p&gt;

&lt;p&gt;Since I’m in China behind the GFW, I also installed ShadowSocks in order to watch YouTube. It is easy to use as on phone, but may need a mouse the config it.&lt;/p&gt;

&lt;p&gt;So here are all the things, happy hacking the device!&lt;/p&gt;</content><author><name></name></author><category term="Android" /><category term="Android TV" /><category term="MiBox" /><summary type="html">I’ve bought a MiBox 3S to watch TV and video for a long time. These days I’ve done lots of things to security my digital life and privacy, like change my Email to Proton Mail, change the search engine to DuckDuckGo, use Authy to enable 2FA when possible, and so on. So I didn’t turn on the MiBox for a long time since I don’t feel security to let a XiaoMi device running all the time in my LAN. The business model of XiaoMi is to sell cheap device and push ads to you. So it definitely collects your data. But I do need a device to watch TV or video on a big screen, so I decide to root and clean it to make it more security. Here is how I do it:</summary></entry><entry><title type="html">The Things You Need to Know When Using Apache Sentry</title><link href="https://www.binwang.me/2018-09-02-The-Things-You-Need-to-Know-When-Using-Apache-Sentry.html" rel="alternate" type="text/html" title="The Things You Need to Know When Using Apache Sentry" /><published>2018-09-02T00:00:00-04:00</published><updated>2018-09-02T00:00:00-04:00</updated><id>https://www.binwang.me/The-Things-You-Need-to-Know-When-Using-Apache-Sentry</id><content type="html" xml:base="https://www.binwang.me/2018-09-02-The-Things-You-Need-to-Know-When-Using-Apache-Sentry.html">&lt;p&gt;For the last few days, I was working on integrating &lt;a href=&quot;https://sentry.apache.org&quot;&gt;Apache Sentry&lt;/a&gt; into our database product Splice Machine. And when doing that, I found the document of Sentry is awful. It takes me much time to figure out what’s the role of Sentry and how to configure it. So in this article, I’d like to write some really important things to help understanding Sentry.&lt;/p&gt;

&lt;h2 id=&quot;the-basic&quot;&gt;The Basic&lt;/h2&gt;

&lt;p&gt;From the &lt;a href=&quot;https://sentry.apache.org/&quot;&gt;official website&lt;/a&gt;, Apache Sentry is a system for enforcing fine grained role based authorization to data and metadata stored on a Hadoop cluster. The services in Hadoop can integrate Sentry so that they can use Sentry to manage authorization. You may think this implies that Sentry is a centralized authorization system and you can configure the authorization polices through Sentry, then all the services can use these polices. This is only half true: Sentry is a centralized authorization service but you may not have a centralized place to configure polices or use that policy for all Hadoop services. Let’s see the details.&lt;/p&gt;

&lt;h2 id=&quot;how-to-configure-sentry-policy&quot;&gt;How to Configure Sentry Policy&lt;/h2&gt;

&lt;p&gt;When I start learning to use Sentry, the configuration of authorization policy confused me a log. I thought it would be like &lt;a href=&quot;https://ranger.apache.org/&quot;&gt;Apache Ranger&lt;/a&gt; to have a centralized web UI or at least provide some CLI tool. But it turns out that’s not the case. And more confusing, there are two ways to configure Sentry polices: one is file based, which is like a centralized way to configure Sentry policy but is deprecated. Another way is to configure polices from other service, which you will not even notice the exist of Sentry.&lt;/p&gt;

&lt;h3 id=&quot;use-policy-file&quot;&gt;Use Policy File&lt;/h3&gt;

&lt;p&gt;Let’s start with the old and deprecated way: using the policy files. The policy file approach is more straightforward: you write a file to define the authorization policies. The file is usually on HDFS so that every node can access it. You tell the service where to find the file. Then the service will use Sentry library to parse the policy file and get the permissions for every user. So in this way, there is no Sentry service, just policy files and Sentry library to parse the files.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;          --------
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;          | User |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;          --------
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;             |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;             | &amp;lt;-- Write Policy Files
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;             V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;    ------------------------
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;    | Sentry Files on HDFS |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;    ------------------------
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;             ^
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;             | &amp;lt;-- Read and Parse with Sentry Library
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;             |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;    ------------------------
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;    | Hive/Impala/Solr ... |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;    ------------------------
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;For more details like how to configure the services to use Sentry policy file and how to write policy files, you can refer the &lt;a href=&quot;https://www.cloudera.com/documentation/enterprise/5-10-x/topics/cdh_sg_sentry.html&quot;&gt;Cloudera document&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;use-sentry-service&quot;&gt;Use Sentry Service&lt;/h3&gt;

&lt;p&gt;Sentry service is a centralized service that other systems can use RPC to request the permissions of a user. If a system is integrated with Sentry service, there is no need to write policy files. However, the system needs to provide methods to configure the policies and save them to Sentry.&lt;/p&gt;

&lt;p&gt;For example, Hive and Impala allow user to use &lt;code&gt;GRANT&lt;/code&gt; and &lt;code&gt;REVOKE&lt;/code&gt; to configure permissions and it will save the permissions into Sentry service. Then when you query from Hive and Impala, it will ask Sentry service to see if you have the permission. Solr provides a tool to let you define the policies and save to Sentry service, too.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;               --------
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;               | User |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;               --------
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;                 |  |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;       Query --&amp;gt; |  | &amp;lt;-- Grant Permission
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;                 V  V
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;         ------------------------
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;         | Hive/Impala/Solr ... |
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;         ------------------------
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;                 ^  |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  Request    --&amp;gt; |  | &amp;lt;-- Save Permissions
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;  Permission     |  |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;                 |  V
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;          -------------------
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;          | Sentry Service  |
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;          -------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So there are two things that confused me a lot and I’d like to highlight here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;There are two ways to configure Sentry policies. The are not related and a little like different systems.&lt;/li&gt;
  &lt;li&gt;For the Sentry service, there is no way to configure policies through Sentry service directly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think these are both design failures of Sentry. For the first one, if a system changed so much, at least you need to change a big version and highlight it in document. Like Python 2 and Python 3.&lt;/p&gt;

&lt;p&gt;For the second one, it is really strange to doesn’t have a way to configure and view the policies through Sentry service. If user still need to configure the permissions separately for each system, it is a little point-less to use a centralized authorization service. Unless the permission model is the same or similar, like Hive and Impala basicly use the same permission model, so if you configure the permissions in Hive, Impala can use it. But the situation like that is rare. And I don’t think it would be difficult to provide a CLI tool to configure and view Sentry policy.&lt;/p&gt;</content><author><name></name></author><category term="Sentry" /><category term="Hadoop" /><category term="Cloudera" /><category term="security" /><category term="Splice Machine" /><summary type="html">For the last few days, I was working on integrating Apache Sentry into our database product Splice Machine. And when doing that, I found the document of Sentry is awful. It takes me much time to figure out what’s the role of Sentry and how to configure it. So in this article, I’d like to write some really important things to help understanding Sentry.</summary></entry><entry><title type="html">Spanner and Open Source Implementations</title><link href="https://www.binwang.me/2018-07-29-A-Review-on-Spanner-and-Open-Source-Implementations.html" rel="alternate" type="text/html" title="Spanner and Open Source Implementations" /><published>2018-07-29T00:00:00-04:00</published><updated>2018-07-29T00:00:00-04:00</updated><id>https://www.binwang.me/A-Review-on-Spanner-and-Open-Source-Implementations</id><content type="html" xml:base="https://www.binwang.me/2018-07-29-A-Review-on-Spanner-and-Open-Source-Implementations.html">&lt;p&gt;When &lt;a href=&quot;https://ai.google/research/pubs/pub39966&quot;&gt;Spanner paper&lt;/a&gt; was published, the use of synced clock to implement globally distributed database attracted a lot of attentions. After these years, Google have put Spanner on its cloud to make everyone be able to use it. And there are also some open source implementations of Spanner in these years. In this article, I’d like to write about how synced clock makes Spanner special, some notes of using it and how others implement it without special hardware clock.&lt;/p&gt;

&lt;h2 id=&quot;1-clock-is-not-trustable&quot;&gt;1. Clock Is Not Trustable&lt;/h2&gt;

&lt;p&gt;Almost every computer has a clock on nowadays. A surprising fact is, the clock is not really accurate and normally we cannot even know the upper bound of the error. There are some reasons for this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Normally the clock is synced with a remote server using NTP. But the network delay upper bound is unknown.&lt;/li&gt;
  &lt;li&gt;Even the local clock is synced accurately once, the hardware in normal computer makes it inaccuracy when time passes. The error is depends on the temperature and so on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more details, you can read the section “Unreliable Clocks” in Chapter 8 of the book &lt;a href=&quot;http://shop.oreilly.com/product/0636920032175.do&quot;&gt;
Designing Data-Intensive Applications&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is not a big deal in normal life to have an unreliable clock, but it is a big deal when your consistency algorithm relies on it. We can see the details in the next section.&lt;/p&gt;

&lt;h2 id=&quot;2-what-is-truetime-api&quot;&gt;2. What is TrueTime API?&lt;/h2&gt;

&lt;p&gt;In order to get rid of the unreliable of clocks, Google use some special hardware like atomic clock to make it reliable. The time which can get from each server is still inaccurate, but the error has a known upper bound. Specifically, these APIs are provided:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;Returns&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TT.now()&lt;/td&gt;
      &lt;td&gt;A time interval: [earliest, latest]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TT.after(t)&lt;/td&gt;
      &lt;td&gt;true if &lt;code&gt;t&lt;/code&gt; has definitely passed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TT.before(t)&lt;/td&gt;
      &lt;td&gt;true if &lt;code&gt;t&lt;/code&gt; has definitely not arrived&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As we can see later, the error upper bound will effect the latency of each transaction. Google said they normally maintain it under 7ms and with an average value of 4ms in their Spanner paper.&lt;/p&gt;

&lt;h2 id=&quot;3-what-truetime-api-gives-spanner&quot;&gt;3. What TrueTime API Gives Spanner?&lt;/h2&gt;

&lt;p&gt;What makes Spanner special is how it uses TrueTime API to do concurrency control. Spanner can guarantee external consistency, which is the most strong concurrency model. It means Spanner is both serializable and linearizable, which makes it very easy for application to avoid concurrency bugs. Serializable isolation can be found in many databases, but usually they are single leader databases, or have a centralized server. This makes it very slow if the database is globally distributed, since the network delay between data centers is large and unstable. If every transaction needs communicate with a centralized server, the transactions will be very slow and unstable.&lt;/p&gt;

&lt;p&gt;Before understanding how Spanner can do this, let’s first look at how serialization transaction can be implemented in a centralized way. The simplest way is let a transaction grant a lock if it want’s to read or write a row, so that this row cannot be modified or read at the same time by another transactions. This is a relatively strong restraint, it will give us bad performance since every transaction excludes each other. We can have a better solution: for read only transactions, serializable isolation is the same as snapshot isolation. So we can implement snapshot isolation for read only transactions in order to have better performance.&lt;/p&gt;

&lt;p&gt;Here is how snapshot isolation works: for every row of data, database stores not only the data, but also a version with it. When a transaction starts, it will only read data earlier than it. Normally we assign an id for each transaction and use it as the version. So here is the key: transaction id needs to be monotone increasing so that a later transaction can only read earlier data. Make a globally monotone increasing sequence is very straightforward and easy for a single machine, but it is very hard in a distributed environment without a centralized server.&lt;/p&gt;

&lt;p&gt;Ordering transactions is complex but can be done without a clock. For example, the vector clock algorithm can do this. But this will not guarantee the accurate order of transaction. For example, if T1 commits before T2 start and they are operating on different partitions, the database may order T2 before T1. An implementation of Spanner Cockroachdb uses algorithms like this. We will analysis the problem of it in Section 6.2.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So what TrueTime API really gives Spanner is generating monotone increasing transaction ID and guarantee external consistency ( or linearizability) at the same time&lt;/strong&gt;: if T1 commits before T2 start, then T1’s transaction ID is always smaller than T2’s transaction ID. Spanner implement this by getting a timestamp from TrueTime API that absolutely passed the current time, and wait to commit until currrent time absolutely passed the timestamp. In Spanner’s paper, there is a proof that this can garantee external consistency:&lt;/p&gt;

&lt;p&gt;\(s_1 &amp;lt; t_{abs}(e_1^{commit})\) (commit wait)&lt;/p&gt;

&lt;p&gt;\(t_{abs}(e_1^{commit}) &amp;lt; t_{abs}(e_2^{start})\) (assumption)&lt;/p&gt;

&lt;p&gt;\(t_{abs}(e_2^{start}) \leq t_{abs}(e_2^{server})\) (causality)&lt;/p&gt;

&lt;p&gt;\(t_{abs}(e_2^{server}) \leq s_2\) (start)&lt;/p&gt;

&lt;p&gt;\(s_1 &amp;lt; s_2\) (transitivity)&lt;/p&gt;

&lt;p&gt;There are also other parts of Spanner that use TrueTime API, for example, the Paxos implementation uses TrueTime API for leader lease. But it is just a implement optimization which can be done in other ways, too.&lt;/p&gt;

&lt;h2 id=&quot;4-the-myth-of-spanner&quot;&gt;4. The Myth of Spanner&lt;/h2&gt;

&lt;p&gt;There are some myth and hyper for Spanner. In this section, I will highlight the weakness of Spanner. I call it “weakness” not because other databases are doing better, but because they are not as good as people may thought. And they are not necessary bad things. It depends on how you understand and use it. If you don’t understand it correctly and thinks all the things are done perfectly and magically, you may run into some problems.&lt;/p&gt;

&lt;p&gt;Many people think when using Spanner, reads can go to a replica closest to the client in most of the time, so the communication between data centers are avoid. But this is not true. In fact, &lt;strong&gt;all the serializable transactions, which includes read-write transactions and read only transactions that wants to read the most recently data, must communicate with the partition leader.&lt;/strong&gt; The theory is in the Spanner paper and there is also an explicit description on &lt;a href=&quot;https://cloud.google.com/spanner/docs/replication&quot;&gt;Spanner Cloud’s document&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s first look at the read-write transaction. Since read-write transaction will write Paxos log, it is straightforward to understand it must involves the leader. And more, it must waits for the major of replicas to confirm the writes in order to make sure the write will not lost when leader fails.&lt;/p&gt;

&lt;p&gt;Then let’s look at the read-only transactions. In Spanner, every replica keeps a timestamp \(t_{safe}\). And if a read-only want’s to read the data at timestamp \(t\) and if \(t \leq t_{safe}\), it is safe to read data from that replica. \(t_{safe}\) will be minimal one between the lastest commit timestamp and the timestamp it generates for a 2PC prepare step (if it has one). There are two situations based on how \(t\) is chosen:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;If the transaction only involves one partition, it is chosen to be the last commit time of the partition. And in order tot get the last commit time, it needs to ask the leader of this partition.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the transaction involves multiple partition, it would be expensive and complex to get a last commit time. So using &lt;code&gt;TT.now().lastest&lt;/code&gt; as \(t\) can garantee it will read a version more recently than current time. And replica will not store \(t_{safe} \geq TT.now().lastest\) since the lastest commit timestamp must be earlier than current, so it needs to ask the leader to confirm whether there are new writes.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;5-how-to-avoid-the-weakness&quot;&gt;5. How to Avoid the Weakness&lt;/h2&gt;

&lt;p&gt;From the last section, we find Spanner cannot avoid the communication between data centers. So why Spanner is still a big deal? We must look into real world problems. In real world, the weakness could be avoid if you understand it. Here is some suggestions when designing your application.&lt;/p&gt;

&lt;h3 id=&quot;51-partition-database-based-on-location&quot;&gt;5.1 Partition Database Based on Location&lt;/h3&gt;

&lt;p&gt;A common pattern for globally distributed business is most transactions are happened only on the data in a limited location. For example, in the businesses like event booking, online ridesharing,  Groupon or some online market, the clients and the data are basically in the same city. So in these business, you can partition the data based on location, and put the leader of each partition on that location.&lt;/p&gt;

&lt;p&gt;In this setting, most of the requests can be done in closed data centers while transactions that involve multiple data centers can also be done which guarantees external consistency.&lt;/p&gt;

&lt;p&gt;Another interesting implementation detail about Spanner is it have three &lt;a href=&quot;https://cloud.google.com/spanner/docs/replication&quot;&gt;kinds of replica&lt;/a&gt;: the read-write replica, read only replica and witness replica. Carefully plan these replicas based on the business and location can make most transactions operate on nearby data centers.&lt;/p&gt;

&lt;h3 id=&quot;52-no-need-to-always-avoid-stale-read&quot;&gt;5.2 No Need to Always Avoid Stale Read&lt;/h3&gt;

&lt;p&gt;Serializable transactions make sure you cannot read old values. But in many cases, you may not need such guarantee. Spanner have an API to let the client specify a time interval, and let Spanner to guarantee it will not read older data that this time. For example, I can request some data no older than 10 seconds ago. When do we only need such a guarantee? I can give some examples here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If you are using Twitter or Facebook, the count of likes doesn’t need to be in real time. A delay around 10 seconds is acceptable. So when user request a Tweet’s like count, he can read a snapshot on the past.&lt;/li&gt;
  &lt;li&gt;If you update your configurations in platforms like Google AdWords, the configuration need not take effect in real time. So when each device read the AdWords configuration, it can read on a past snapshot.&lt;/li&gt;
  &lt;li&gt;When generate a report, like how many user views for each webpage, the result need not to be in real time, either.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So what’s the benefits to allow stale read? It turns out Spanner will sync up the data and safe time to all the replica. So if the time you specify is a relatively long interval, e.g. 10 seconds, you can read from a closest server and avoid all the communication between data centers, which will make the read fast.&lt;/p&gt;

&lt;h2 id=&quot;6-open-source-implementations&quot;&gt;6. Open Source Implementations&lt;/h2&gt;

&lt;p&gt;Google have released Spanner on Google Cloud, which makes it possible for everyone (with money (and not behind GFW)) to use. But if you don’t want to stuck on one provider or interested in more implementation details, you may want to look into some open source ones.&lt;/p&gt;

&lt;p&gt;In general, if we know the theory behind a software, we can hope there are some open source implementations. The quality of these open source software is only a matter of time and focus. However, in Spanner’s case, a hardware clock is needed, which is rare for normal users. So the open source implementations are a little different from Spanner’s original one. Let’s take a look at two popular implementations and see how they get rid of the lack of hardware clock and how the implementation effect the result.&lt;/p&gt;

&lt;h3 id=&quot;61-tidb&quot;&gt;6.1 TiDB&lt;/h3&gt;

&lt;p&gt;TiDB uses a single time server to generate the transaction ID in order to make it monotone increasing. This is simple and they claim the throughput of the time server is very high and can be deployed in an HA way. But the down side is also very obvious: the latency would be high if you have data centers around the world. This doesn’t only effect the read-write transactions, but will effect all the requests: include the read-only ones with snapshot isolation: since when doing readonly transaction, the client’s timestamp is not trustable, it can only get a trustable timestamp from the time server. Of course client can cache some timestamps returned from the server and maintain them to use in the future requests, but it would be complex and error-prone. In fact, TiDB’s developer recommends the network delay between the servers under 5ms in the section “What’s the recommended solution for the deployment of three geo-distributed data centers?” of &lt;a href=&quot;https://github.com/pingcap/docs/blob/master/FAQ.md&quot;&gt;their FAQ&lt;/a&gt;. Considering light still needs about 6ms to travel from Beijing to Guangzhou and needs about 12ms from New York to San Francisco, the requirements is not possible to reach in a real globally distributed cluster. And maintain a stable latency in a globally scale is hard and expensive, too.&lt;/p&gt;

&lt;p&gt;Since the most highlight part of Spanner is globally distributed, the down side of TiDB is really a big deal. But the good part of TiDB is it compatible with MySQL protocol, which makes it to be a very easy solution if you want to scale out your old MySQL database.&lt;/p&gt;

&lt;p&gt;And another different between TiDB and Spanner is TiDB only supports isolation level up to repeatable reads (or snapshot isolation), which is a weaker level than Spanner’s serializable isolation.&lt;/p&gt;

&lt;h3 id=&quot;62-cockroachdb&quot;&gt;6.2 CockroachDB&lt;/h3&gt;

&lt;p&gt;CockroachDB uses another approach to solve the lack of TrueTime API. The algorithm is a little complex. You can refer to &lt;a href=&quot;https://www.cockroachlabs.com/blog/living-without-atomic-clocks/&quot;&gt;their blog&lt;/a&gt; and the &lt;a href=&quot;https://cse.buffalo.edu/tech-reports/2014-04.pdf&quot;&gt;HLC paper&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;The most obviously problem of this implementation is it lacks linearizability. To see what will happen when lacking linearizability, the “Comments” section of &lt;a href=&quot;https://jepsen.io/analyses/cockroachdb-beta-20160829&quot;&gt;Jepsen test for Cockroachdb&lt;/a&gt; explains it very clearly.&lt;/p&gt;

&lt;h3 id=&quot;63-conclusion&quot;&gt;6.3 Conclusion&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Database&lt;/th&gt;
      &lt;th&gt;Special Hardware&lt;/th&gt;
      &lt;th&gt;Isolation Level&lt;/th&gt;
      &lt;th&gt;Consistency Level&lt;/th&gt;
      &lt;th&gt;Centralized Time Server&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spanner&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;Serializable&lt;/td&gt;
      &lt;td&gt;Linearizable&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TiDB&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Repeatable Reads&lt;/td&gt;
      &lt;td&gt;Linearizable&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cockroachdb&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Serializable&lt;/td&gt;
      &lt;td&gt;Causal Consistency&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name></name></author><category term="Technical" /><category term="database" /><category term="technology" /><category term="distributed system" /><summary type="html">When Spanner paper was published, the use of synced clock to implement globally distributed database attracted a lot of attentions. After these years, Google have put Spanner on its cloud to make everyone be able to use it. And there are also some open source implementations of Spanner in these years. In this article, I’d like to write about how synced clock makes Spanner special, some notes of using it and how others implement it without special hardware clock.</summary></entry><entry><title type="html">My 2017 Year in Review</title><link href="https://www.binwang.me/2018-01-02-The-Year-of-2017.html" rel="alternate" type="text/html" title="My 2017 Year in Review" /><published>2018-01-02T00:00:00-05:00</published><updated>2018-01-02T00:00:00-05:00</updated><id>https://www.binwang.me/The-Year-of-2017</id><content type="html" xml:base="https://www.binwang.me/2018-01-02-The-Year-of-2017.html">&lt;p&gt;When I open my blog, I suddenly realized that I haven’t even writen one blog in 2017. I’ve tried to write some blogs about technology but it spent too much time and energy so I gave up at last. There happens a lot of things on me in 2017. So I must write something while the next year is beginning. Things have changed both on my life and my work. I don’t want to write too many details on my personal life, so I will just record some work related things.&lt;/p&gt;

&lt;h2 id=&quot;job-change&quot;&gt;Job Change&lt;/h2&gt;

&lt;p&gt;At the mid of 2017, I’ve quite my job at &lt;a href=&quot;https://www.appadhoc.com&quot;&gt;AppAdhoc (吆喝科技)&lt;/a&gt;. I was one of the earliest employee and have built most of the backend platform. It has been very happy to write a platform from scratch that can handle billions of requests per day. But the changes in the company at this year makes me tired and I decided to quite and do something else. I’ve explored, learned and used many cool technologies while I was in this company. I’d like to write some blogs about that in the future.&lt;/p&gt;

&lt;h2 id=&quot;machine-learning&quot;&gt;Machine Learning&lt;/h2&gt;

&lt;p&gt;After I quite the job, the thing I want to do most is writting some machine learning application. I’ve writen some of them in the past and built a workstation contains a GPU so I can train models faster. The techs are cool but I don’t know what to built yet. I tried to write a word based game (like &lt;a href=&quot;https://en.wikipedia.org/wiki/MUD&quot;&gt;Mud&lt;/a&gt;) and build some AI into it. But there is too many details. And the economic pressures makes me to do some other things that can earn money. So this game project is suspended and I became a freelancer. But let’s write about the freelancer experience later and complete my machine learning story first.&lt;/p&gt;

&lt;p&gt;After the game project suspended, I’ve writen &lt;a href=&quot;https://ai.binwang.me/couplet/&quot;&gt;another machine learning application&lt;/a&gt;, which is unexpected popular. This application plays couplet (对对联), which is a traditional Chinese word game. One gives a sentence and another one come up with another sentence that matches it both in structure and meaning. It plays a big part in the traditional Chinese literature. It’s like poem which needs creation and inpiration. The structure of couplets makes it easy to train. I use it as a practice to write seq2seq model. After I publish it online, it attracted more than 200 thousands unique visitors in one week.&lt;/p&gt;

&lt;p&gt;The last project I’ve written about machine learning is the dissertation of my MSc project. I’ve joined the MSc distance learning project at the University of Leicester at the mid of 2016. So I need to write a dissertation in order to get the degree this year. This project is also NLP related and is about text classification and regression. I may write more details in the future.&lt;/p&gt;

&lt;p&gt;Though I’ve writen some machine learning application, I don’t think I’ve put more time on it or learned more than in 2016. For example, I’ve read less paper and book, and written less code. In my plan, the book &lt;em&gt;Probability Theory: The Logic of Science&lt;/em&gt; should be completed in 2017, but I almost haven’t read it after I quite the job. However, the degree of proficiency of writting a web crawler and Tensorflow code have been increased, which is one thing that I can comfort myself.&lt;/p&gt;

&lt;h2 id=&quot;freelancer-experience&quot;&gt;Freelancer Experience&lt;/h2&gt;

&lt;p&gt;After about 2 months since quiting my job, I realized I need to do something to earn money. But I was tired to go to work and sit in an office all the day. So I became a freelancer and find projects online. Until now, I have two part-time remote jobs and an ongoing project. It has been very busy. Doing outsourcing projects means there are many time-consuming details to confirm and fix. As programmers, we know that software is built with many iterations. It needs much work to build a software ready for the customer. But many customers don’t know that. They saw softwares on the market and just want one like that, not considering how much time it has been built and iterated by a how big team.  So the price for the outsourcing projects is not always good. However, it is something that I can do without other dependencies and be able to work from home. So I will deal with that for now.&lt;/p&gt;

&lt;h2 id=&quot;p2p-network-and-blockchain&quot;&gt;P2P Network and Blockchain&lt;/h2&gt;

&lt;p&gt;Though blockchain is a hot technology in recent years, I’ve researched little on it. But something happened recently makes me take a serious thought on it. To be more specificly, it makes me think about the decenterlized Internet, not just blockchain. But the blockchain is the technology I didn’t familar with in the past.&lt;/p&gt;

&lt;p&gt;The cause is the couplet AI I’ve built. I built a trending module that let users vote the best couplets generated from the AI. And there are some couplets related to politics on that. So my Weibo account is deactived by the Chinese goverment and the couplet AI website is blocked by GFW. There are many memories and contacts in my Weibo account. That’s the time I realized how important it is to have a decenterlized Internet, which one can control his own data and no one can modify or delete it.&lt;/p&gt;

&lt;p&gt;That’s also the time when the 19th CPC National Congress just concluded. And some other things happend in Beijing and in my life makes me think how AI will affect goverment and big companies’ power. At past, I didn’t care about it and just wanted to build something fun. But now I realize with the goverment’s administrative power and the big companies’ monopoly power, they can gather more data and use more computation power than the ordinary beings. And data is the key. In the past days, without the advanced AI technologies, thay can find little useful things from it because the data is too big. No one can read and analysis all of it. But with developing of AI, they can get more and more useful informations from it: the bussiness secret, your habit, your property and so on. If we cannot own ourself’s data and keep it secret, we will become the new slaves, being exploited even we are not aware of it.&lt;/p&gt;

&lt;p&gt;Then I found the project &lt;a href=&quot;https://blockstack.org/&quot;&gt;BlockStack&lt;/a&gt;. It is not perfect but gives me a clue on how to build the decenterlized softwares. Maybe I will not have the time to research on that deeply in the new year, but it definitely worth to do so.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So this is 2017 for me. Not perfect, not great. I’ve felt lots of confused, pain and pressure in the last year. But that’s not a bad thing. It gives me a chance to think the things and opportunities that I’ve never thought of. Maybe that’s the feeling of growth.&lt;/p&gt;</content><author><name></name></author><category term="thoughs" /><category term="life" /><summary type="html">When I open my blog, I suddenly realized that I haven’t even writen one blog in 2017. I’ve tried to write some blogs about technology but it spent too much time and energy so I gave up at last. There happens a lot of things on me in 2017. So I must write something while the next year is beginning. Things have changed both on my life and my work. I don’t want to write too many details on my personal life, so I will just record some work related things.</summary></entry><entry><title type="html">Build a Unix Like Environment on Windows</title><link href="https://www.binwang.me/2016-11-28-Config-Development-Environment-on-Windows.html" rel="alternate" type="text/html" title="Build a Unix Like Environment on Windows" /><published>2016-11-28T00:00:00-05:00</published><updated>2016-11-28T00:00:00-05:00</updated><id>https://www.binwang.me/Config-Development-Environment-on-Windows</id><content type="html" xml:base="https://www.binwang.me/2016-11-28-Config-Development-Environment-on-Windows.html">&lt;p&gt;I’ve bought a Surface Pro 4 some days ago. It is very amazing and I’d like to use it as my backup development laptop. My daily development is under Linux and Mac OS X. I use terminal and lots of bash scripts everyday. So I need a Unix-like environment on Windows. This article will introduce how to do that.&lt;/p&gt;

&lt;h2 id=&quot;terminal-and-unix-tools&quot;&gt;Terminal and Unix Tools&lt;/h2&gt;

&lt;p&gt;There is a famous software called &lt;a href=&quot;https://www.cygwin.com/&quot;&gt;Cygwin&lt;/a&gt; which provides many unix tools along with a terminal. You can download it from its homepage and install it with GUI.&lt;/p&gt;

&lt;p&gt;While installing it, it will ask you which tools you’d like to install. Just install the default ones and Lynx is enough, since we will install a package manager and it will be easier to install other tools then.&lt;/p&gt;

&lt;p&gt;You can use Xterm with Cygwin terminal, so you can config it as you are in Linux.&lt;/p&gt;

&lt;h2 id=&quot;package-manager&quot;&gt;Package Manager&lt;/h2&gt;

&lt;p&gt;The most missed thing while I’m using Windows is Linux’s package manager. You can search, install, update and manage software very easily with it. There is also HomeBrew under Mac OS X so I’d like something like that under Windows. I searched on Google and found &lt;a href=&quot;https://github.com/transcode-open/apt-cyg&quot;&gt;apt-cyg&lt;/a&gt; which can manage packages in Cygwin. You can follow the steps on its homepage to install it. After install it, you can install wget with it so that it will stop print warning messages.&lt;/p&gt;

&lt;p&gt;I’ve installed tmux, zsh, Git and vim with it. And config them with my &lt;a href=&quot;https://github.com/wb14123/dotfiles&quot;&gt;config files&lt;/a&gt;. I only need to change the tmux start up config:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;- set -g default-command &amp;quot;reattach-to-user-namespace -l /bin/zsh&amp;quot;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;+ set -g default-command &amp;quot;/usr/bin/zsh&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Except this, everything else works very well without any problem.&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;p&gt;There are many tools are written in Python. And my work also uses Python a lot. You can install Python with apt-cyg. But there will be some tricky things if you need to install some Python packages with pip.&lt;/p&gt;

&lt;p&gt;First we will install pip:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;apt-cyg install python python-devel
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;wget http://peak.telecommunity.com/dist/ez_setup.py
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;python ez_setup.py
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;easy_install pip
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Then we need to install gcc in order to compile some python packages:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;apt-cyg install colorgcc gcc-core gcc-g++ libgcc1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Then we need to change a python header file: /usr/include/python2.7/pyconfig.h:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;- #define __BSD_VISIBLE 1
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;+ #define __BSD_VISIBLE 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><category term="Windows" /><category term="Python" /><category term="bash" /><summary type="html">I’ve bought a Surface Pro 4 some days ago. It is very amazing and I’d like to use it as my backup development laptop. My daily development is under Linux and Mac OS X. I use terminal and lots of bash scripts everyday. So I need a Unix-like environment on Windows. This article will introduce how to do that.</summary></entry></feed>