<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Bin Wang</title>
		<description>This is my personal blog about computer since and technology, and my life.</description>		
		<link>http://www.binwang.me</link>
		<atom:link href="http://www.binwang.me/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>摒弃现代科技的隐士生活</title>
				
					<description>&lt;p&gt;今天在知乎上看到一篇帖子，说到意大利有一家旅馆，周围都是森林，远离外界的生活。同时在旅馆内禁止使用手机，晚上也只用蜡烛而不用灯。虽然这个旅馆的其他细节并不了解，但是给我的印象是远离城市、摒弃现代科技的浪漫感觉。初看之下， 还比较向往，但是细细想来，好像并没有什么必要非要摒弃现代的科技。&lt;/p&gt;

</description>
				
                        	<pubDate>Wed, 04 Nov 2015 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2015-11-04-the-life-of-hermit-without-materially.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2015-11-04-the-life-of-hermit-without-materially.html</guid>
			</item>
		
			<item>
				<title>The Proper Way to Use Spark Checkpoint</title>
				
					<description>&lt;p&gt;These days I’m using Spark streaming to process real time data. I’m using &lt;code&gt;updateStateByKey&lt;/code&gt;, so I need to add &lt;a href=&quot;https://spark.apache.org/docs/latest/streaming-programming-guide.html#checkpointing&quot;&gt;checkpointing&lt;/a&gt;, which is a fault tolerance mechanism of Spark streaming. The checkpoint will save DAG and RDDs. So when you restart the Spark application from failure, it will continue to compute.&lt;/p&gt;

</description>
				
                        	<pubDate>Tue, 03 Nov 2015 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2015-11-03-the-proper-way-to-use-spark-checkpoint.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2015-11-03-the-proper-way-to-use-spark-checkpoint.html</guid>
			</item>
		
			<item>
				<title>My Recent Work About Neural Networks</title>
				
					<description>&lt;p&gt;These days I’ve written some code about neural networks. There is nothing important, but worth to be recorded.&lt;/p&gt;

</description>
				
                        	<pubDate>Thu, 02 Jul 2015 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2015-07-02-my-recent-work-about-neural-networks.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2015-07-02-my-recent-work-about-neural-networks.html</guid>
			</item>
		
			<item>
				<title>Use Docker to Submit Spark Jobs</title>
				
					<description>&lt;p&gt;These days I’m working on analyze data with Spark. Since our Spark cluster is offline in the office for now, so it needs to download data from log server every hour, analyze them with Spark and then upload to the server. The work flow is a little complex so I write some scripts to do it. In addition, I also write a whole automated end to end test for it.&lt;/p&gt;

</description>
				
                        	<pubDate>Wed, 29 Apr 2015 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2015-04-29-use-docker-to-submit-spark-jobs.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2015-04-29-use-docker-to-submit-spark-jobs.html</guid>
			</item>
		
			<item>
				<title>How About Translate IMAP And SMTP Into HTTP API?</title>
				
					<description>&lt;p&gt;I use Gmail as my personal Email. And it works well. I always uses the web UI for it. After Google Inbox is out, it feels even better.&lt;/p&gt;

</description>
				
                        	<pubDate>Sun, 26 Apr 2015 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2015-04-26-how-about-translate-imap-and-smtp-into-http-api.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2015-04-26-how-about-translate-imap-and-smtp-into-http-api.html</guid>
			</item>
		
			<item>
				<title>Backpropagation Algorithm</title>
				
					<description>&lt;p&gt;These days I start to learn neural networks again and write some Matlab codes from scratch. I try to understand everything I do while I write the code, so I derive the equations in the back propagation while try to keep it clear and easy to understand.&lt;/p&gt;

</description>
				
                        	<pubDate>Sat, 17 Jan 2015 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2015-01-17-backpropagation-algorithm.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2015-01-17-backpropagation-algorithm.html</guid>
			</item>
		
			<item>
				<title>Why Use Reflections to Write A Web Framework</title>
				
					<description>&lt;p&gt;Lots of people don’t like reflections. And I said if I could see the whole things I might not use reflections (with Annotation) to write the web framework &lt;a href=&quot;https://github.com/wb14123/bard&quot;&gt;Bard&lt;/a&gt;. But I think it is not true, I really need reflections to do the things.&lt;/p&gt;

</description>
				
                        	<pubDate>Sun, 28 Dec 2014 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2014-12-28-why-use-reflections-to-write-a-web-framework.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2014-12-28-why-use-reflections-to-write-a-web-framework.html</guid>
			</item>
		
			<item>
				<title>The Thoughts Behind Bard Framework</title>
				
					<description>&lt;p&gt;These days I’m working on a really exciting project: a web framework. My job is to write web services, and there is no framework I thought is doing things right. So I just write one myself. It is really an interesting thing. I will talk about some thoughts behind it in this article.&lt;/p&gt;

</description>
				
                        	<pubDate>Tue, 16 Dec 2014 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2014-12-16-the-thoughts-behind-bard-framework.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2014-12-16-the-thoughts-behind-bard-framework.html</guid>
			</item>
		
			<item>
				<title>Docker Is the One Scaffolding to Rule Them All</title>
				
					<description>&lt;blockquote&gt;
  &lt;p&gt;One Ring to rule them all, One Ring to find them,&lt;/p&gt;

  &lt;p&gt;One Ring to bring them all and in the darkness bind them&lt;/p&gt;

  &lt;p&gt;– &lt;em&gt;The Load of the Rings&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
				
                        	<pubDate>Mon, 03 Nov 2014 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2014-11-03-docker-is-the-one-scaffolding-to-rule-them-all.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2014-11-03-docker-is-the-one-scaffolding-to-rule-them-all.html</guid>
			</item>
		
			<item>
				<title>Notes On Go Scheduler</title>
				
					<description>&lt;p&gt;I read the Go source code about scheduler these days. They are under &lt;code&gt;src/pkg/runtime&lt;/code&gt;, mainly in &lt;code&gt;runtime.h&lt;/code&gt;, &lt;code&gt;proc.c&lt;/code&gt; and some Assembly files. The scheduler’s policy is easy to understand, because there are already many articles on this. I’m more interesting in the details. I learned how to switch the current running goroutine, which is a little mystery for me before.&lt;/p&gt;

</description>
				
                        	<pubDate>Mon, 01 Sep 2014 00:00:00 +0800</pubDate>
				<link>http://www.binwang.me/2014-09-01-notes-on-go-scheduler.html</link>
				<guid isPermaLink="true">http://www.binwang.me/2014-09-01-notes-on-go-scheduler.html</guid>
			</item>
		
	</channel>
</rss>
